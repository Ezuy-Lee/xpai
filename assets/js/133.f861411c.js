(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{560:function(s,e,n){"use strict";n.r(e);var a=n(15),r=Object(a.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[n("strong",[s._v("前言")]),n("br"),s._v("\n上一篇文件Zookeeper实现参数的集中式管理介绍了使用Zookeeper对节点的监听通知机制简单实现了对参数的集中式管理，其实JMS的发布订阅机制也能实现类似的功能，集群节点通过订阅指定的节点，同时使用jms对消息的过滤器功能，实现对指定参数的更新，本文将介绍通过JMS实现简单的参数集中式管理。")]),s._v(" "),n("p",[n("strong",[s._v("Maven引入")]),n("br"),s._v("\nSpring相关的jar引入参考上一篇文章")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<dependency>\n    <groupId>javax.jms</groupId>\n    <artifactId>jms</artifactId>\n    <version>1.1</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.activemq</groupId>\n    <artifactId>activemq-all</artifactId>\n    <version>5.10.0</version>\n</dependency>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[n("strong",[s._v("目标")]),n("br"),s._v("\n1.可以同时配置监听多个节点如/app1,/app2；"),n("br"),s._v("\n2.希望只需要配置如/app1，就能够监听其子节点如/app1/modual1以及子节点的子节点如/app1/modual1/xxx/…；"),n("br"),s._v("\n3.服务器启动能获取当前指定父节点下的所有子节点数据；"),n("br"),s._v("\n4.在添加节点或者在更新节点数据的时候能够动态通知，这样代码中就能够实时获取最新的数据；"),n("br"),s._v("\n5.spring配置中可以从Zookeeper中读取参数进行初始化。")]),s._v(" "),n("p",[s._v("虽然在实现的方式上有点区别，但是最终达成的目标是一致的，同样列出了这5条目标")]),s._v(" "),n("p",[n("strong",[s._v("实现")]),n("br"),s._v("\nMQWatcher主要用来和JMS建立连接，同时订阅指定节点，建立点对点连接，过滤出需要监听的数据，更新数据，初始化数据，存储数据等"),n("br"),s._v("\nInitConfServer主要作为点对点连接的服务器端用来初始化数据")]),s._v(" "),n("p",[s._v("1.同时配置监听多个节点"),n("br"),s._v("\n提供一个字符串数组给用户用来添加需要监听的节点：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("private String[] keyPatterns;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("2.能够监听其子节点以及子节点的子节点"),n("br"),s._v("\n使用了一种和Zookeeper不一样的方式，JMS的方式是将所有的数据变更都发送到订阅者，然后订阅者通过过滤出需要的数据进行更新")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('/** MQ的过滤器 **/\nprivate StringBuffer keyFilter = new StringBuffer();\n \nprivate final String TOPIC = "dynamicConfTopic";\n \nprivate void watcherPaths() throws JMSException {\n    Topic topic = session.createTopic(TOPIC);\n    MessageConsumer consumer = session.createConsumer(topic, keyFilter.toString());\n    consumer.setMessageListener(new MessageListener() {\n \n        @Override\n        public void onMessage(Message message) {\n            try {\n                String key = message.getStringProperty(IDENTIFIER);\n                TextMessage tm = (TextMessage) message;\n                keyValueMap.put(key, tm.getText());\n                LOGGER.info("key = " + key + ",value = " + tm.getText());\n            } catch (JMSException e) {\n                LOGGER.error("onMessage error", e);\n            }\n        }\n    });\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br")])]),n("p",[s._v("对TOPIC进行了订阅，并且指定了过滤器keyFilter，keyFilter正是基于keyPatterns组装而成的")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('private final String IDENTIFIER = "confKey";\n \n/**\n* 生成接受过滤器\n*/\nprivate void generateKeyFilter() {\n    for (int i = 0; i < keyPatterns.length; i++) {\n        keyFilter.append(IDENTIFIER + " LIKE \'" + keyPatterns[i] + "%\'");\n        if (i < keyPatterns.length - 1) {\n            keyFilter.append(" OR ");\n        }\n    }\n    LOGGER.info("keyFilter : " + keyFilter.toString());\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("对指定的属性IDENTIFIER，通过LIKE和OR关键字进行过滤")]),s._v(" "),n("p",[s._v("3.服务器启动初始化节点数据"),n("br"),s._v("\n通过点对点的方式，在服务器启动时通过请求响应模式来获取初始化数据")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('private final String QUEUE = "dynamicConfQueue";\n \n/**\n * 初始化key-value值\n * \n * @throws JMSException\n */\nprivate void initKeyValues() throws JMSException {\n    TemporaryQueue responseQueue = null;\n    MessageProducer producer = null;\n    MessageConsumer consumer = null;\n    Queue queue = queueSession.createQueue(QUEUE);\n \n    TextMessage requestMessage = queueSession.createTextMessage();\n    requestMessage.setText(generateKeyString());\n    responseQueue = queueSession.createTemporaryQueue();\n    producer = queueSession.createProducer(queue);\n    consumer = queueSession.createConsumer(responseQueue);\n    requestMessage.setJMSReplyTo(responseQueue);\n    producer.send(requestMessage);\n \n    MapMessage receiveMap = (MapMessage) consumer.receive();\n    @SuppressWarnings("unchecked")\n    Enumeration<String> mapNames = receiveMap.getPropertyNames();\n    while (mapNames.hasMoreElements()) {\n        String key = mapNames.nextElement();\n        String value = receiveMap.getStringProperty(key);\n        keyValueMap.put(key, value);\n        LOGGER.info("init key = " + key + ",value = " + value);\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])]),n("p",[s._v("通过对指定QUEUE请求，同时建立一个临时的响应QUEUE，然后接受一个MapMessage，用来初始化keyValueMap")]),s._v(" "),n("p",[s._v("4.监听节点数据的变更"),n("br"),s._v("\n通过发布订阅模式，接受所有数据，然后进行过滤，目标2中已经有相关实现")]),s._v(" "),n("p",[s._v("5.spring配置中可以从Zookeeper中读取参数进行初始化")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("public class MQPropPlaceholderConfigurer extends PropertyPlaceholderConfigurer {\n \n    private MQWatcher mqwatcher;\n \n    @Override\n    protected Properties mergeProperties() throws IOException {\n        return loadPropFromMQ(super.mergeProperties());\n    }\n \n    /**\n     * 从MQ中加载配置的常量\n     * \n     * @param result\n     * @return\n     */\n    private Properties loadPropFromMQ(Properties result) {\n        mqwatcher.watcherKeys();\n        mqwatcher.fillProperties(result);\n        return result;\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("p",[s._v("通过以上的处理，可以使用如下简单的配置来达到目标：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<?xml version="1.0" encoding="UTF-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"\n    xmlns:tx="http://www.springframework.org/schema/tx"\n    xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd\n        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd\n        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">\n    <bean id="person" class="zh.maven.DynamicConf.Person">\n        <property name="name">\n            <value>${/a2/m1}</value>\n        </property>\n        <property name="address">\n            <value>${/a3/m1/v2}</value>\n        </property>\n        <property name="company">\n            <value>${/a3/m1/v2/t2}</value>\n        </property>\n    </bean>\n    <bean id="mqwatcher" class="zh.maven.DynamicConf.mq.MQWatcher">\n        <property name="keyPatterns" value="/a2,/a3" />\n    </bean>\n    <bean id="propertyConfigurer" class="zh.maven.DynamicConf.mq.MQPropPlaceholderConfigurer">\n        <property name="mqwatcher" ref="mqwatcher"></property>\n    </bean>\n</beans>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("p",[n("strong",[s._v("测试")]),n("br"),s._v("\n1.启动ActiveMQ")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("activemq.bat\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("2.InitConfServer启动"),n("br"),s._v("\n用来监听集群节点的初始化请求，获取到集群节点发送来的keyPatterns，然后将符合其模式的数据封装成MapMessage发送给集群节点")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Override\npublic void onMessage(Message message) {\n    try {\n        TextMessage receiveMessage = (TextMessage) message;\n        String keys = receiveMessage.getText();\n        LOGGER.info("keys = " + keys);\n        MapMessage returnMess = session.createMapMessage();\n        returnMess.setStringProperty("/a2/m1", "zhaohui");\n        returnMess.setStringProperty("/a3/m1/v2", "nanjing");\n        returnMess.setStringProperty("/a3/m1/v2/t2", "zhaohui");\n \n        QueueSender sender = session.createSender((Queue) message.getJMSReplyTo());\n        sender.send(returnMess);\n    } catch (Exception e) {\n        LOGGER.error("onMessage error", e);\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("以上代码只是进行了简单的模拟，提供了一个思路")]),s._v(" "),n("p",[s._v("3.启动Main类")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('public class Main {\n \n    public static void main(String[] args) throws Exception {\n        ApplicationContext context = new ClassPathXmlApplicationContext(new String[] { "spring-config.xml" });\n        Person person = (Person) context.getBean("person");\n        System.out.println(person.toString());\n        }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("4.启动TopicPublisher"),n("br"),s._v("\n定时发布数据，同时查看集群节点的Main类日志输出")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('public class TopicPublisher {\n    private static final String TOPIC = "dynamicConfTopic";\n    private static final String IDENTIFIER = "confKey";\n \n    public static void main(String[] args) throws JMSException {\n        ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory("tcp://localhost:61616");\n        Connection connection = factory.createConnection();\n        connection.start();\n \n        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);\n        Topic topic = session.createTopic(TOPIC);\n \n        MessageProducer producer = session.createProducer(topic);\n        producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);\n \n        int i=1;\n        while (true) {\n            TextMessage message = session.createTextMessage();\n            message.setStringProperty(IDENTIFIER, "/a2/"+i);\n            message.setText("message_" + System.currentTimeMillis());\n            producer.send(message);\n            System.out.println("Sent message: " + message.getText());\n            try {\n                Thread.sleep(2000);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n            i++;\n        }\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])]),n("p",[s._v("日志输出如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("2017-08-14 21:52:23 - keyFilter : confKey LIKE '/a2%' OR confKey LIKE '/a3%'\n2017-08-14 21:52:24 - init key = /a3/m1/v2/t2,value = zhaohui\n2017-08-14 21:52:24 - init key = /a3/m1/v2,value = nanjing\n2017-08-14 21:52:24 - init key = /a2/m1,value = zhaohui\n2017-08-14 21:52:24 - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@223dd567: defining beans [person,mqwatcher,propertyConfigurer]; root of factory hierarchy\nname = zhaohui,address = nanjing,company = zhaohui\n2017-08-14 21:52:33 - key = /a2/1,value = message_1502718753819\n2017-08-14 21:52:35 - key = /a2/2,value = message_1502718755832\n2017-08-14 21:52:37 - key = /a2/3,value = message_1502718757846\n2017-08-14 21:52:39 - key = /a2/4,value = message_1502718759860\n2017-08-14 21:52:41 - key = /a2/5,value = message_1502718761876\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("详细代码svn地址："),n("a",{attrs:{href:"http://code.taobao.org/svn/temp-pj/DynamicConf",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://code.taobao.org/svn/temp-pj/DynamicConf"),n("OutboundLink")],1)]),s._v(" "),n("p",[n("strong",[s._v("总结")]),n("br"),s._v("\n通过JMS实现了一个简单的参数化平台系统，当然想在生产中使用还有很多需要优化的地方，本文在于提供一个思路；后续有时间准备对DynamicConf提供更加完善的方案。")])])}),[],!1,null,null,null);e.default=r.exports}}]);