(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{505:function(s,e,a){"use strict";a.r(e);var n=a(15),t=Object(n.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" "),a("strong",[s._v("前言")])]),s._v(" "),a("p",[s._v("数据库锁定机制简单来说就是数据库为了保证数据的一致性而使各种共享资源在被并发访问访问变得有序所设计的一种规则；对于任何一种数据库来说都需要有相应的锁定机制，Mysql也不例外。")]),s._v(" "),a("h2",{attrs:{id:"mysql几种锁定机制类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql几种锁定机制类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("Mysql几种锁定机制类型")])]),s._v(" "),a("p",[s._v("MySQL 各存储引擎使用了三种类型（级别）的锁定机制：行级锁定，页级锁定和表级锁定。")]),s._v(" "),a("h3",{attrs:{id:"_1-行级锁定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-行级锁定"}},[s._v("#")]),s._v(" 1.行级锁定")]),s._v(" "),a("p",[s._v("锁定对象的颗粒度很小，只对当前行进行锁定，所以发生锁定资源争用的概率也最小，能够给予应用程序尽可能大的并发处理能力；弊端就是获取锁释放锁更加频繁，系统消耗更大，同时行级锁定也最容易发生死锁；"),a("br"),s._v("\n行级锁定的主要是Innodb存储引擎和NDB Cluster存储引擎；")]),s._v(" "),a("h3",{attrs:{id:"_2-页级锁定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-页级锁定"}},[s._v("#")]),s._v(" 2.页级锁定")]),s._v(" "),a("p",[s._v("锁定颗粒度介于行级锁定与表级锁之间，每页有多行数据，并发处理能力以及获取锁定所需要的资源开销在两者之间；"),a("br"),s._v("\n页级锁定主要是BerkeleyDB 存储引擎；")]),s._v(" "),a("h3",{attrs:{id:"_3-表级锁定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-表级锁定"}},[s._v("#")]),s._v(" 3.表级锁定")]),s._v(" "),a("p",[s._v("一次会将整张表锁定，该锁定机制最大的特点是实现逻辑非常简单，带来的系统负面影响最小，而且可以避免死锁问题；弊端就是锁定资源争用的概率最高，并发处理能力最低；"),a("br"),s._v("\n使用表级锁定的主要是MyISAM，Memory，CSV等一些非事务性存储引擎。")]),s._v(" "),a("p",[s._v("本文重点介绍Innodb存储引擎使用的行级锁定；")]),s._v(" "),a("h2",{attrs:{id:"两段锁协议-2pl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两段锁协议-2pl"}},[s._v("#")]),s._v(" "),a("strong",[s._v("两段锁协议(2PL)")])]),s._v(" "),a("p",[s._v("两段锁协议规定所有的事务应遵守的规则："),a("br"),s._v("\n1.在对任何数据进行读、写操作之前，首先要申请并获得对该数据的封锁；"),a("br"),s._v("\n2.在释放一个封锁之后，事务不再申请和获得其它任何封锁；")]),s._v(" "),a("p",[s._v("即事务的执行分为两个阶段："),a("br"),s._v("\n第一阶段是获得封锁的阶段，称为扩展阶段；第二阶段是释放封锁的阶段，称为收缩阶段；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("begin;\ninsert ...   加锁1\nupdate ...   加锁2\ncommit;      事务提交时，释放锁1，锁2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("如果在加锁2的时候，加锁不成功，则进入等待状态，直到加锁成功才继续执行；"),a("br"),s._v("\n如果有另外一个事务获取锁的时候顺序刚好相反，是有可能导致死锁的；为此有了一次性封锁法，要求事务必须一次性将所有要使用的数据全部加锁，否则就不能继续执行；")]),s._v(" "),a("p",[a("strong",[s._v("定理：若所有事务均遵守两段锁协议，则这些事务的所有交叉调度都是可串行化的（串行化很重要，尤其是在数据恢复和备份的时候）；")])]),s._v(" "),a("h2",{attrs:{id:"行级锁定-悲观锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行级锁定-悲观锁"}},[s._v("#")]),s._v(" "),a("strong",[s._v("行级锁定（悲观锁）")])]),s._v(" "),a("h3",{attrs:{id:"_1-共享锁和排他锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-共享锁和排他锁"}},[s._v("#")]),s._v(" 1.共享锁和排他锁")]),s._v(" "),a("p",[s._v("Innodb的行级锁定同样分为两种类型：共享锁和排他锁；"),a("br"),s._v(" "),a("strong",[s._v("共享锁")]),s._v("：当一个事务获得共享锁之后，它只可以进行读操作，所以共享锁也叫读锁，多个事务可以同时获得某一行数据的共享锁；"),a("br"),s._v(" "),a("strong",[s._v("排他锁")]),s._v("：而当一个事务获得一行数据的排他锁时，就可以对该行数据进行读和写操作，所以排他锁也叫写锁，排他锁与共享锁和其他的排他锁不兼容；")]),s._v(" "),a("p",[s._v("既然数据库提供了共享锁和排他锁，那具体用在什么地方："),a("br"),s._v("\n1.1在数据库操作中，为了有效保证并发读取数据的正确性，提出的事务隔离级别，隔离级别就使用了锁机制；"),a("br"),s._v("\n1.2提供了相关的SQL，可以方便的在程序中使用；")]),s._v(" "),a("h3",{attrs:{id:"_2-事务隔离级别和锁的关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-事务隔离级别和锁的关系"}},[s._v("#")]),s._v(" 2.事务隔离级别和锁的关系")]),s._v(" "),a("p",[s._v("数据库隔离级别：未提交读(Read uncommitted)，已提交读(Read committed)，可重复读(Repeatable read)和可串行化(Serializable)；"),a("br"),s._v("\n未提交读(Read uncommitted)：可能读取到其他会话中未提交事务修改的数据，会出现"),a("strong",[s._v("脏读(Dirty Read)")]),s._v("；"),a("br"),s._v("\n已提交读(Read committed)：只能读取到已经提交的数据，会出现"),a("strong",[s._v("不可重复读(NonRepeatable Read)")]),s._v("；"),a("br"),s._v("\n可重复读(Repeatable read)：InnoDB默认级别，不会出现不可重复读(NonRepeatable Read)，但是会出现"),a("strong",[s._v("幻读(Phantom Read)")]),s._v(";"),a("br"),s._v("\n可串行化(Serializable)：强制事务排序，使之不可能相互冲突，从而解决幻读问题，使用表级共享锁，读写相互都会阻塞；")]),s._v(" "),a("p",[s._v("常用的2种隔离级别是："),a("strong",[s._v("已提交读(Read committed)"),a("strong",[s._v("和")]),s._v("可重复读(Repeatable read)")]),s._v("；")]),s._v(" "),a("h3",{attrs:{id:"_3-已提交读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-已提交读"}},[s._v("#")]),s._v(" 3.已提交读")]),s._v(" "),a("h4",{attrs:{id:"_3-1准备测试表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1准备测试表"}},[s._v("#")]),s._v(" 3.1准备测试表")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("CREATE TABLE `test_lock` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `name` varchar(255) NOT NULL,\n  `type` int(11) DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8\n \nmysql> insert into test_lock values(null,'zhaohui',1);\nmysql> insert into test_lock values(null,'zhaohui2',2);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h4",{attrs:{id:"_3-2查看和设置隔离级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2查看和设置隔离级别"}},[s._v("#")]),s._v(" 3.2查看和设置隔离级别")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> SELECT @@tx_isolation;\n+-----------------+\n| @@tx_isolation  |\n+-----------------+\n| REPEATABLE-READ |\n+-----------------+\n1 row in set\n \nmysql> set session transaction isolation level read committed;\nQuery OK, 0 rows affected\n \nmysql> SELECT @@tx_isolation;\n+----------------+\n| @@tx_isolation |\n+----------------+\n| READ-COMMITTED |\n+----------------+\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h4",{attrs:{id:"_3-3模拟多个事务交叉执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3模拟多个事务交叉执行"}},[s._v("#")]),s._v(" 3.3模拟多个事务交叉执行")]),s._v(" "),a("p",[s._v("Session1执行查询")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> begin;\nQuery OK, 0 rows affected\nmysql> select * from test_lock where id=1;\n+----+---------+------+\n| id | name    | type |\n+----+---------+------+\n|  1 | zhaohui |    1 |\n+----+---------+------+\n1 row in set\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("Session2更新数据")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> begin;\nQuery OK, 0 rows affected\n \nmysql> update test_lock set name='zhaohui_new' where id=1;\n  \nQuery OK, 1 row affected\nRows matched: 1  Changed: 1  Warnings: 0\nmysql> commit;\nQuery OK, 0 rows affected\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("Session1执行查询")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> select * from test_lock where id=1;\n+----+-------------+------+\n| id | name        | type |\n+----+-------------+------+\n|  1 | zhaohui_new |    1 |\n+----+-------------+------+\n1 row in set\n \nmysql> commit;\nQuery OK, 0 rows affected\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("Session1中出现了不可重复读(NonRepeatable Read)，也就是在查询的时候没有锁住相关的数据，导致出现了不可重复读，但是写入、修改和删除数据还是加锁了，如下所示：")]),s._v(" "),a("p",[s._v("Session1更新数据")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> begin;\nQuery OK, 0 rows affected\n \nmysql> update test_lock set name='zhaohui_new2' where id=1;\nQuery OK, 1 row affected\nRows matched: 1  Changed: 1  Warnings: 0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("Session2更新数据")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> begin;\nQuery OK, 0 rows affected\n \nmysql> update test_lock set name='zhaohui_new3' where id=1;\n1205 - Lock wait timeout exceeded; try restarting transaction\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("Session2更新在更新同一条数据的时候超时了，在更新数据的时候添加了排他锁；")]),s._v(" "),a("h3",{attrs:{id:"_4-可重复读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-可重复读"}},[s._v("#")]),s._v(" 4.可重复读")]),s._v(" "),a("h4",{attrs:{id:"_4-1查看和设置隔离级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1查看和设置隔离级别"}},[s._v("#")]),s._v(" 4.1查看和设置隔离级别")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> set session transaction isolation level repeatable read;\nQuery OK, 0 rows affected\n \nmysql> SELECT @@tx_isolation;\n+-----------------+\n| @@tx_isolation  |\n+-----------------+\n| REPEATABLE-READ |\n+-----------------+\n1 row in set\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h4",{attrs:{id:"_4-2模拟多个事务交叉执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2模拟多个事务交叉执行"}},[s._v("#")]),s._v(" 4.2模拟多个事务交叉执行")]),s._v(" "),a("p",[s._v("Session1执行查询")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> begin;\nQuery OK, 0 rows affected\n \nmysql> select * from test_lock where type=2;\n+----+----------+------+\n| id | name     | type |\n+----+----------+------+\n|  2 | zhaohui2 |    2 |\n+----+----------+------+\n1 row in set\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("Session2更新数据")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> begin;\nQuery OK, 0 rows affected\n \nmysql> update test_lock set name='zhaohui2_new' where type=2;\nQuery OK, 1 row affected\nRows matched: 1  Changed: 1  Warnings: 0\n \nmysql> commit;\nQuery OK, 0 rows affected\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("Session1执行查询")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> select * from test_lock where type=2;\n+----+----------+------+\n| id | name     | type |\n+----+----------+------+\n|  2 | zhaohui2 |    2 |\n+----+----------+------+\n1 row in set\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("可以发现2次查询的数据结果是一样的，实现了可重复读(Repeatable read)，再来看一下是否有幻读(Phantom Read)的问题；")]),s._v(" "),a("p",[s._v("Session3插入数据")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> begin;\nQuery OK, 0 rows affected\n \nmysql> insert into test_lock values(null,'zhaohui3',2);\nQuery OK, 1 row affected\n \nmysql> commit;\nQuery OK, 0 rows affected\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("Session1执行查询")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> select * from test_lock where type=2;\n+----+----------+------+\n| id | name     | type |\n+----+----------+------+\n|  2 | zhaohui2 |    2 |\n+----+----------+------+\n1 row in set\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("可以发现可重复读(Repeatable read)隔离级别下，也不会出现幻读的现象；")]),s._v(" "),a("p",[a("strong",[s._v("分析一下原因")]),s._v("：如何通过悲观锁的方式去实现可重复读和不出现幻读的现象，对读取的数据加共享锁，对同样的数据执行更新操作就只能等待，这样就可以保证可重复读，但是对于不出现幻读的现象无法通过锁定行数据来解决；"),a("br"),s._v("\n最终看到的现象是没有幻读的问题，同时如果对读取的数据加共享锁，更新相同数据应该会等待，上面的实例中并没有出现等待，所以mysql内部应该还有其他锁机制--MVCC机制；")]),s._v(" "),a("h3",{attrs:{id:"_5-悲观锁sql使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-悲观锁sql使用"}},[s._v("#")]),s._v(" 5.悲观锁SQL使用")]),s._v(" "),a("h4",{attrs:{id:"_5-1共享锁使用-lock-in-share-mode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1共享锁使用-lock-in-share-mode"}},[s._v("#")]),s._v(" 5.1共享锁使用(lock in share mode)")]),s._v(" "),a("p",[s._v("Session1查询数据")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> begin;\nQuery OK, 0 rows affected\n \nmysql> select * from test_lock where type=2 lock in share mode;\n+----+--------------+------+\n| id | name         | type |\n+----+--------------+------+\n|  2 | zhaohui2_new |    2 |\n|  3 | zhaohui3     |    2 |\n+----+--------------+------+\n2 rows in set\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("Session2查询数据")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> begin;\nQuery OK, 0 rows affected\n \nmysql> select * from test_lock where type=2 lock in share mode;\n+----+--------------+------+\n| id | name         | type |\n+----+--------------+------+\n|  2 | zhaohui2_new |    2 |\n|  3 | zhaohui3     |    2 |\n+----+--------------+------+\n2 rows in set\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("Session3更新数据")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> begin;\nQuery OK, 0 rows affected\n \nmysql> update test_lock set name='zhaohui3_new' where id=3;\n1205 - Lock wait timeout exceeded; try restarting transaction\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("Session1和Session2使用了共享锁，所以可以存在多个，并不冲突，但是Session3更新操作需要加上排他锁，和共享锁不能同时存在；")]),s._v(" "),a("h4",{attrs:{id:"_5-2排他锁使用-for-update"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2排他锁使用-for-update"}},[s._v("#")]),s._v(" 5.2排他锁使用(for update)")]),s._v(" "),a("p",[s._v("Session1查询数据")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> begin;\nQuery OK, 0 rows affected\n \nmysql> select * from test_lock where type=2 for update;\n+----+--------------+------+\n| id | name         | type |\n+----+--------------+------+\n|  2 | zhaohui2_new |    2 |\n|  3 | zhaohui3     |    2 |\n+----+--------------+------+\n2 rows in set\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("Session2查询数据")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> begin;\nQuery OK, 0 rows affected\n \nmysql> select * from test_lock where type=2 for update;\nEmpty set\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("Session3更新数据")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> begin;\nQuery OK, 0 rows affected\n \nmysql> update test_lock set name='zhaohui3_new' where id=3;\n1205 - Lock wait timeout exceeded; try restarting transaction\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("排他锁只能有一个同时存在，所有Session2和Session3都将等等超时；")]),s._v(" "),a("h2",{attrs:{id:"多版本并发控制mvcc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多版本并发控制mvcc"}},[s._v("#")]),s._v(" "),a("strong",[s._v("多版本并发控制MVCC")])]),s._v(" "),a("p",[a("strong",[s._v("多版本并发控制(Multiversion Concurrency Control)")]),s._v("：每一个写操作都会创建一个新版本的数据，读操作会从有限多个版本的数据中挑选一个最合适的结果直接返回；读写操作之间的冲突就不再需要被关注，而管理和快速挑选数据的版本就成了MVCC需要解决的主要问题。"),a("br"),s._v("\n为什么要引入此机制，首先通过悲观锁来处理读请求是很耗性能的，其次数据库的事务大都是只读的，读请求是写请求的很多倍，最后如果没有并发控制机制，最坏的情况也是读请求读到了已经写入的数据，这对很多应用完全是可以接受的；")]),s._v(" "),a("p",[s._v("再来看一下可重复读(Repeatable read)现象，通过MVCC机制读操作只读该事务开始前的数据库的快照(snapshot), 这样在读操作不用阻塞写操作，写操作不用阻塞读操作的同时，避免了脏读和不可重复读;")]),s._v(" "),a("p",[s._v("当然并不是说悲观锁就没有用了，在数据更新的时候数据库默认还是使用悲观锁的，所以MVCC是可以整合起来一起使用的(MVCC+2PL)，用来解决读-写冲突的无锁并发控制；"),a("br"),s._v("\nMVCC使用快照读的方式，解决了不可重复读和幻读的问题，如上面的实例所示：select查询的一直是快照信息，不需要添加任何锁；"),a("br"),s._v("\n以上实例中使用的select方式把它称为"),a("strong",[s._v("快照读(snapshot read)")]),s._v("，其实事务的隔离级别的读还有另一层含义：读取数据库当前版本数据–"),a("strong",[s._v("当前读(current read)")]),s._v("；")]),s._v(" "),a("h2",{attrs:{id:"当前读和gap锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#当前读和gap锁"}},[s._v("#")]),s._v(" "),a("strong",[s._v("当前读和Gap锁")])]),s._v(" "),a("p",[s._v("区别普通的select查询，当前读对应的sql包括：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("select ...for update,\nselect ...lock in share mode,\ninsert,update,delete;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("以上sql本身会加悲观锁，所以不存在不可重复读的问题，剩下的就是幻读的问题；"),a("br"),s._v("\nSession1执行当前读")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> select * from test_lock where type=2 for update;\n+----+----------------+------+\n| id | name           | type |\n+----+----------------+------+\n|  2 | zhaohui2_new   |    2 |\n|  3 | zhaohui3_new_1 |    2 |\n+----+----------------+------+\n2 rows in set\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("Session2执行插入")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql> begin;\nQuery OK, 0 rows affected\n \nmysql> insert into test_lock values(null,'zhaohui_001',1);\n1205 - Lock wait timeout exceeded; try restarting transaction\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("为什么明明锁住的是type=2的数据，当插入type=1也会锁等待，因为InnoDB对于行的查询都是采用了Next-Key锁，锁定的不是单个值，而是一个范围(GAP);"),a("br"),s._v("\n如果当前type类型包括：1，2，4，6，8，10锁住type=2，那么type=1，2，3会被锁住，后面的不会，锁住的是一个区间；这样也就保证了当前读也不会出现幻读的现象；"),a("br"),s._v(" "),a("strong",[s._v("注：type字段添加了索引，如果没有添加索引，gap锁会锁住整张表；")])]),s._v(" "),a("h2",{attrs:{id:"乐观锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#乐观锁"}},[s._v("#")]),s._v(" "),a("strong",[s._v("乐观锁")])]),s._v(" "),a("p",[s._v("乐观锁是一种思想，认为事务间争用没有那么多，和悲观锁是相对的，乐观锁在java的并发包中大量的使用；一般采用以下方式：使用版本号(version)机制来实现，版本号就是为数据添加一个版本标志，一般在表中添加一个version字段；当读取数据的时候把version也取出来，然后version+1，更新数据库的时候对比第一次取出来的version和数据库里面的version是否一致，如果一致则更新成功，否则失败进入重试，具体使用大致如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("begin;\nselect id,name,version from test_lock where id=1;\n....\nupdate test_lock set name='xxx',version=version+1 where id=1 and version=${version};\ncommit;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("先查询后更新，需要保证原子性，要么使用悲观锁的方式，对整个事务加锁；要么使用乐观锁的方式，如果在读多写少的系统中，乐观锁性能更好；")]),s._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" "),a("strong",[s._v("总结")])]),s._v(" "),a("p",[s._v("本文首先从Mysql的悲观锁出发，然后介绍了悲观锁和事务隔离级别之间的关系，并分析为什么没有使用悲观锁来实现隔离级别；然后从问题出发分别介绍了MVCC和Gap锁是如何解决了不可重复读的问题和幻读的问题；最后介绍了乐观锁经常被用在读数据远大于写数据的系统中。")])])}),[],!1,null,null,null);e.default=t.exports}}]);