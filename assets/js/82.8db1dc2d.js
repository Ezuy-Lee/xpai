(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{508:function(s,a,n){"use strict";n.r(a);var e=n(15),t=Object(e.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),n("p",[s._v("最近有个需求解析一个订单文件，并且说明文件可达到千万条数据，每条数据大概在20个字段左右，每个字段使用逗号分隔，需要尽量在半小时内入库。")]),s._v(" "),n("h2",{attrs:{id:"思路"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[s._v("#")]),s._v(" 思路")]),s._v(" "),n("h4",{attrs:{id:"_1-估算文件大小"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-估算文件大小"}},[s._v("#")]),s._v(" 1.估算文件大小")]),s._v(" "),n("p",[s._v("因为告诉文件有千万条，同时每条记录大概在20个字段左右，所以可以大致估算一下整个订单文件的大小，方法也很简单使用"),n("strong",[s._v("FileWriter")]),s._v("往文件中插入一千万条数据，查看文件大小，经测试大概在1.5G左右；")]),s._v(" "),n("h4",{attrs:{id:"_2-如何批量插入"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-如何批量插入"}},[s._v("#")]),s._v(" 2.如何批量插入")]),s._v(" "),n("p",[s._v("由上可知文件比较大，一次性读取内存肯定不行，方法是每次从当前订单文件中截取一部分数据，然后进行批量插入，如何批次插入可以使用**insert(...)values(...),(...)**的方式，经测试这种方式效率还是挺高的；")]),s._v(" "),n("h4",{attrs:{id:"_3-数据的完整性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-数据的完整性"}},[s._v("#")]),s._v(" 3.数据的完整性")]),s._v(" "),n("p",[s._v("截取数据的时候需要注意，需要保证数据的完整性，每条记录最后都是一个换行符，需要根据这个标识保证每次截取都是整条数，不要出现半条数据这种情况；")]),s._v(" "),n("h4",{attrs:{id:"_4-数据库是否支持批次数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-数据库是否支持批次数据"}},[s._v("#")]),s._v(" 4.数据库是否支持批次数据")]),s._v(" "),n("p",[s._v("因为需要进行批次数据的插入，数据库是否支持大量数据写入，比如这边使用的mysql，可以通过设置"),n("strong",[s._v("max_allowed_packet")]),s._v("来保证批次提交的数据量；")]),s._v(" "),n("h4",{attrs:{id:"_5-中途出错的情况"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-中途出错的情况"}},[s._v("#")]),s._v(" 5.中途出错的情况")]),s._v(" "),n("p",[s._v("因为是大文件解析，如果中途出现错误，比如数据刚好插入到900w的时候，数据库连接失败，这种情况不可能重新来插一遍，所有需要记录每次插入数据的位置，并且需要保证和批次插入的数据在同一个事务中，这样恢复之后可以从记录的位置开始继续插入。")]),s._v(" "),n("h2",{attrs:{id:"实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[s._v("#")]),s._v(" 实现")]),s._v(" "),n("h4",{attrs:{id:"_1-准备数据表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-准备数据表"}},[s._v("#")]),s._v(" 1.准备数据表")]),s._v(" "),n("p",[s._v("这里需要准备两张表分别是：订单状态位置信息表，订单表；")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("CREATE TABLE `file_analysis` (\n  `id` bigint(20) NOT NULL AUTO_INCREMENT,\n  `file_type` varchar(255) NOT NULL COMMENT '文件类型 01:类型1，02:类型2',\n  `file_name` varchar(255) NOT NULL COMMENT '文件名称',\n  `file_path` varchar(255) NOT NULL COMMENT '文件路径',\n  `status` varchar(255) NOT NULL COMMENT '文件状态  0初始化；1成功；2失败：3处理中',\n  `position` bigint(20) NOT NULL COMMENT '上一次处理完成的位置',\n  `crt_time` datetime NOT NULL COMMENT '创建时间',\n  `upd_time` datetime NOT NULL COMMENT '更新时间',\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("CREATE TABLE `file_order` (\n  `id` bigint(20) NOT NULL AUTO_INCREMENT,\n  `file_id` bigint(20) DEFAULT NULL,\n  `field1` varchar(255) DEFAULT NULL,\n  `field2` varchar(255) DEFAULT NULL,\n  `field3` varchar(255) DEFAULT NULL,\n  `field4` varchar(255) DEFAULT NULL,\n  `field5` varchar(255) DEFAULT NULL,\n  `field6` varchar(255) DEFAULT NULL,\n  `field7` varchar(255) DEFAULT NULL,\n  `field8` varchar(255) DEFAULT NULL,\n  `field9` varchar(255) DEFAULT NULL,\n  `field10` varchar(255) DEFAULT NULL,\n  `field11` varchar(255) DEFAULT NULL,\n  `field12` varchar(255) DEFAULT NULL,\n  `field13` varchar(255) DEFAULT NULL,\n  `field14` varchar(255) DEFAULT NULL,\n  `field15` varchar(255) DEFAULT NULL,\n  `field16` varchar(255) DEFAULT NULL,\n  `field17` varchar(255) DEFAULT NULL,\n  `field18` varchar(255) DEFAULT NULL,\n  `crt_time` datetime NOT NULL COMMENT '创建时间',\n  `upd_time` datetime NOT NULL COMMENT '更新时间',\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=10000024 DEFAULT CHARSET=utf8\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("h4",{attrs:{id:"_2-配置数据库包大小"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-配置数据库包大小"}},[s._v("#")]),s._v(" 2.配置数据库包大小")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("mysql> show VARIABLES like '%max_allowed_packet%';\n+--------------------------+------------+\n| Variable_name            | Value      |\n+--------------------------+------------+\n| max_allowed_packet       | 1048576    |\n| slave_max_allowed_packet | 1073741824 |\n+--------------------------+------------+\n2 rows in set\n\nmysql> set global max_allowed_packet = 1024*1024*10;\nQuery OK, 0 rows affected\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("通过设置max_allowed_packet，保证数据库能够接收批次插入的数据包大小；不然会出现如下错误：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("Caused by: com.mysql.jdbc.PacketTooBigException: Packet for query is too large (4980577 > 1048576). You can change this value on the server by setting the max_allowed_packet' variable.\n    at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3915)\n    at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2598)\n    at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)\n    at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2834)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h4",{attrs:{id:"_3-准备测试数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-准备测试数据"}},[s._v("#")]),s._v(" 3.准备测试数据")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    public static void main(String[] args) throws IOException {\n        FileWriter out = new FileWriter(new File("D://xxxxxxx//orders.txt"));\n        for (int i = 0; i < 10000000; i++) {\n            out.write(\n                    "vaule1,vaule2,vaule3,vaule4,vaule5,vaule6,vaule7,vaule8,vaule9,vaule10,vaule11,vaule12,vaule13,vaule14,vaule15,vaule16,vaule17,vaule18");\n            out.write(System.getProperty("line.separator"));\n        }\n        out.close();\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("使用FileWriter遍历往一个文件里插入1000w条数据即可，这个速度还是很快的，不要忘了在每条数据的后面添加"),n("strong",[s._v("换行符(\\n\\r)")]),s._v("；")]),s._v(" "),n("h4",{attrs:{id:"_4-截取数据的完整性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-截取数据的完整性"}},[s._v("#")]),s._v(" 4.截取数据的完整性")]),s._v(" "),n("p",[s._v("除了需要设置每次读取文件的大小，同时还需要设置一个参数，用来每次获取一小部分数据，从这小部分数据中获取"),n("strong",[s._v("换行符(\\n\\r)")]),s._v("，如果获取不到一直累加直接获取为止，这个值设置大小大致同每条数据的大小差不多合适，部分实现如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("ByteBuffer byteBuffer = ByteBuffer.allocate(buffSize); // 申请一个缓存区\nlong endPosition = batchFileSize + startPosition - buffSize;// 子文件结束位置\n\nlong startTime, endTime;\nfor (int i = 0; i < count; i++) {\n    startTime = System.currentTimeMillis();\n    if (i + 1 != count) {\n        int read = inputChannel.read(byteBuffer, endPosition);// 读取数据\n        readW: while (read != -1) {\n            byteBuffer.flip();// 切换读模式\n            byte[] array = byteBuffer.array();\n            for (int j = 0; j < array.length; j++) {\n                byte b = array[j];\n                if (b == 10 || b == 13) { // 判断\\n\\r\n                    endPosition += j;\n                    break readW;\n                }\n            }\n            endPosition += buffSize;\n            byteBuffer.clear(); // 重置缓存块指针\n            read = inputChannel.read(byteBuffer, endPosition);\n        }\n    } else {\n        endPosition = fileSize; // 最后一个文件直接指向文件末尾\n    }\n    ...省略，更多可以查看Github完整代码...\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("p",[s._v("如上代码所示开辟了一个缓冲区，根据每行数据大小来定大概在200字节左右，然后通过遍历查找"),n("strong",[s._v("换行符(\\n\\r)")]),s._v("，找到以后将当前的位置加到之前的结束位置上，保证了数据的完整性；")]),s._v(" "),n("h4",{attrs:{id:"_5-批次插入数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-批次插入数据"}},[s._v("#")]),s._v(" 5.批次插入数据")]),s._v(" "),n("p",[s._v("通过**insert(...)values(...),(...)**的方式批次插入数据，部分代码如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// 保存订单和解析位置保证在一个事务中\n        SqlSession session = sqlSessionFactory.openSession();\n        try {\n            long startTime = System.currentTimeMillis();\n            FielAnalysisMapper fielAnalysisMapper = session.getMapper(FielAnalysisMapper.class);\n            FileOrderMapper fileOrderMapper = session.getMapper(FileOrderMapper.class);\n            fileOrderMapper.batchInsert(orderList);\n\n            // 更新上次解析到的位置，同时指定更新时间\n            fileAnalysis.setPosition(endPosition + 1);\n            fileAnalysis.setStatus("3");\n            fileAnalysis.setUpdTime(new Date());\n            fielAnalysisMapper.updateFileAnalysis(fileAnalysis);\n            session.commit();\n            long endTime = System.currentTimeMillis();\n            System.out.println("===插入数据花费:" + (endTime - startTime) + "ms===");\n        } catch (Exception e) {\n            session.rollback();\n        } finally {\n            session.close();\n        }\n        ...省略，更多可以查看Github完整代码...\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("p",[s._v("如上代码在一个事务中同时保存批次订单数据和文件解析位置信息，batchInsert通过使用mybatis的**"),n("foreach",[s._v("**标签来遍历订单列表，生成values数据；")])],1),s._v(" "),n("h2",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),n("p",[s._v("以上展示了部分代码，完整的代码可以查看Github地址中的batchInsert模块，本地设置每次截取的文件大小为2M，经测试1000w条数据(大小1.5G左右)插入mysql数据库中，大概花费时间在20分钟左右，当然可以通过设置截取的文件大小，花费的时间也会相应的改变。")])])}),[],!1,null,null,null);a.default=t.exports}}]);