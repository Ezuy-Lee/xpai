(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{442:function(t,a,s){"use strict";s.r(a);var r=s(15),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"八种基本数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#八种基本数据类型"}},[t._v("#")]),t._v(" 八种基本数据类型")]),t._v(" "),s("p",[t._v("Java中有8种基本数据类型分为三大类。")]),t._v(" "),s("h4",{attrs:{id:"字符型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符型"}},[t._v("#")]),t._v(" 字符型")]),t._v(" "),s("p",[s("code",[t._v("char")])]),t._v(" "),s("h4",{attrs:{id:"布尔型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#布尔型"}},[t._v("#")]),t._v(" 布尔型")]),t._v(" "),s("p",[s("code",[t._v("boolean")])]),t._v(" "),s("h4",{attrs:{id:"数值型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数值型"}},[t._v("#")]),t._v(" 数值型")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("整型："),s("code",[t._v("byte、short、int、long")])])]),t._v(" "),s("li",[s("p",[t._v("浮点型："),s("code",[t._v("float、double")])])])]),t._v(" "),s("p",[t._v("String不是基本数据类型，是引用类型。")]),t._v(" "),s("h3",{attrs:{id:"整型中byte、short、int、long的取值范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#整型中byte、short、int、long的取值范围"}},[t._v("#")]),t._v(" 整型中byte、short、int、long的取值范围")]),t._v(" "),s("p",[t._v("Java中的整型主要包含byte、short、int和long这四种，表示的数字范围也是从小到大的，之所以表示范围不同主要和他们存储数据时所占的字节数有关。")]),t._v(" "),s("p",[t._v("先来个简答的科普，1字节=8位（bit）。java中的整型属于有符号数。")]),t._v(" "),s("p",[t._v("先来看计算中8bit可以表示的数字： 最小值：10000000 （-128）(-2^7) 最大值：01111111（127）(2^7-1) 具体计算方式参考："),s("a",{attrs:{href:"https://hollischuang.github.io/toBeTopJavaer/#/basics/java-basic/integerscope%22%3Ehttps://hollischuang.github.io/toBeTopJavaer/#/basics/java-basic/integer-scope",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java中，为什么byte类型的取值范围为-128~127? - CSDN博客"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("整型的这几个类型中:：")]),t._v(" "),s("p",[s("strong",[t._v("byte")]),t._v("：byte用1个字节来存储，范围为-128(-2^7)到127(2^7-1)，在变量初始化的时候，byte类型的默认值为0。")]),t._v(" "),s("p",[s("strong",[t._v("short")]),t._v("：short用2个字节存储，范围为-32,768 (-2^15)到32,767 (2^15-1)，在变量初始化的时候，short类型的默认值为0，一般情况下，因为Java本身转型的原因，可以直接写为0。")]),t._v(" "),s("p",[s("strong",[t._v("int")]),t._v("：int用4个字节存储，范围为-2,147,483,648 (-2^31)到2,147,483,647 (2^31-1)，在变量初始化的时候，int类型的默认值为0。")]),t._v(" "),s("p",[s("strong",[t._v("long")]),t._v("：long用8个字节存储，范围为-9,223,372,036,854,775,808 (-2^63)到9,223,372,036, 854,775,807 (2^63-1)，在变量初始化的时候，long类型的默认值为0L或0l，也可直接写为0。")]),t._v(" "),s("p",[t._v("上面说过了，整型中，每个类型都有一定的表示范围，但是，在程序中有些计算会导致超出表示范围，即溢出。如以下代码：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MAX_VALUE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MAX_VALUE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" k "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"i ("')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('") + j ("')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('") = k ("')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" k "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('")"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("输出结果："),s("code",[t._v("i (2147483647) + j (2147483647) = k (-2)")])]),t._v(" "),s("p",[t._v("这就是发生了溢出，溢出的时候并不会抛异常，也没有任何提示。所以，在程序中，使用同类型的数据进行运算的时候，一定要注意数据溢出的问题。")]),t._v(" "),s("h3",{attrs:{id:"什么是浮点型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是浮点型"}},[t._v("#")]),t._v(" 什么是浮点型？")]),t._v(" "),s("p",[t._v("在计算机科学中，浮点是一种对于实数的近似值数值表现法，由一个有效数字（即尾数）加上幂数来表示，通常是乘以某个基数的整数次指数得到。以这种表示法表示的数值，称为浮点数（floating-point number）。")]),t._v(" "),s("p",[t._v("计算机使用浮点数运算的主因，在于电脑使用二进位制的运算。例如：4÷2=2，4的二进制表示为100、2的二进制表示为010，在二进制中，相当于退一位数(100 -> 010)。")]),t._v(" "),s("p",[t._v("1的二进制是01，1.0/2=0.5，那么，0.5的二进制表示应该为(0.1)，以此类推，0.25的二进制表示为0.01，所以，并不是说所有的十进制小数都能准确的用二进制表示出来，如0.1，因此只能使用近似值的方式表达。")]),t._v(" "),s("p",[t._v("也就是说，，十进制的小数在计算机中是由一个整数或定点数（即尾数）乘以某个基数（计算机中通常是2）的整数次幂得到的，这种表示方法类似于基数为10的科学计数法。")]),t._v(" "),s("p",[t._v("一个浮点数a由两个数m和e来表示：a = m × be。在任意一个这样的系统中，我们选择一个基数b（记数系统的基）和精度p（即使用多少位来存储）。m（即尾数）是形如±d.ddd...ddd的p位数（每一位是一个介于0到b-1之间的整数，包括0和b-1）。如果m的第一位是非0整数，m称作正规化的。有一些描述使用一个单独的符号位（s 代表+或者-）来表示正负，这样m必须是正的。e是指数。")]),t._v(" "),s("p",[t._v("位（bit）是衡量浮点数所需存储空间的单位，通常为32位或64位，分别被叫作单精度和双精度。")]),t._v(" "),s("h3",{attrs:{id:"什么是单精度和双精度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是单精度和双精度"}},[t._v("#")]),t._v(" 什么是单精度和双精度？")]),t._v(" "),s("p",[t._v("单精度浮点数在计算机存储器中占用4个字节（32 bits），利用“浮点”（浮动小数点）的方法，可以表示一个范围很大的数值。")]),t._v(" "),s("p",[t._v("比起单精度浮点数，双精度浮点数(double)使用 64 位（8字节） 来存储一个浮点数。")]),t._v(" "),s("h3",{attrs:{id:"为什么不能用浮点型表示金额"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么不能用浮点型表示金额"}},[t._v("#")]),t._v(" 为什么不能用浮点型表示金额？")]),t._v(" "),s("p",[t._v("由于计算机中保存的小数其实是十进制的小数的近似值，并不是准确值，所以，千万不要在代码中使用浮点数来表示金额等重要的指标。")]),t._v(" "),s("p",[t._v("建议使用BigDecimal或者Long（单位为分）来表示金额。")])])}),[],!1,null,null,null);a.default=e.exports}}]);