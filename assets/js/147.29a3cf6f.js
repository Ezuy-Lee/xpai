(window.webpackJsonp=window.webpackJsonp||[]).push([[147],{573:function(s,n,a){"use strict";a.r(n);var e=a(15),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),a("p",[s._v("正是因为副本机制你的部署能自动保待运行，并且保持健康，无须任何手动干预；本文继续介绍kubernetes的另一个强大的功能"),a("strong",[s._v("服务")]),s._v("，在客户端和pod之间提供一个服务层，提供了单一的接入点，更加方便客户端使用pod。")]),s._v(" "),a("h2",{attrs:{id:"服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务"}},[s._v("#")]),s._v(" 服务")]),s._v(" "),a("p",[s._v("Kubernetes服务是一种为一组功能相同的pod提供单一不变的接入点的资源；当服务存在时，它的IP地址和端口不会改变，客户端通过IP地址和端口号建立连接，这些连接会被路由到提供该服务的任意一个pod上；")]),s._v(" "),a("h3",{attrs:{id:"_1-创建服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建服务"}},[s._v("#")]),s._v(" 1.创建服务")]),s._v(" "),a("p",[s._v("服务的连接对所有的后端pod是负载均衡的，至于哪些pod被属于哪个服务，通过在定义服务的时候设置标签选择器；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[d:\\k8s]$ kubectl create -f kubia-rc.yaml\nreplicationcontroller/kubia created\n\n[d:\\k8s]$ kubectl get pod\nNAME          READY   STATUS              RESTARTS   AGE\nkubia-6dxn7   0/1     ContainerCreating   0          4s\nkubia-fhxht   0/1     ContainerCreating   0          4s\nkubia-fpvc7   0/1     ContainerCreating   0          4s\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("使用之前的yaml文件创建pod，模版中设置的标签为"),a("strong",[s._v("app: kubia")]),s._v("，所以创建服务的yaml（还有之前介绍的"),a("strong",[s._v("kubectl expose")]),s._v("方式也可以创建服务）中也需要指定相同的标签：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("apiVersion: v1\nkind: Service\nmetadata:\n  name: kubia\nspec:\n  ports:\n  - port: 80\n    targetPort: 8080\n  selector:\n    app: kubia\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("首先指定的资源类型为Service，然后指定了两个端口分别：port服务提供的端口，targetPort指定pod中进程监听的端口，最后指定标签选择器，相同标签的pod被当前服务管理；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[d:\\k8s]$ kubectl create -f kubia-svc.yaml\nservice/kubia created\n\n[d:\\k8s]$ kubectl get svc\nNAME         TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE\nkubernetes   ClusterIP   10.96.0.1       <none>        443/TCP   6d15h\nkubia        ClusterIP   10.96.191.193   <none>        80/TCP    4s\n\n[d:\\k8s]$ kubectl exec kubia-6dxn7 -- curl -s http://10.96.191.193\nYou've hit kubia-fhxht\n\n[d:\\k8s]$ kubectl exec kubia-6dxn7 -- curl -s http://10.96.191.193\nYou've hit kubia-fpvc7\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("创建完服务之后，可以发现给kubia分配了CLUSTER-IP，这是一个内部ip；至于如何测试可以使用kubectl exec命令远程地在一个已经存在的pod容器上执行任何命令；pod名称可以随意指定三个中的任何一个，接收到crul命令的pod，会转发给Service，由Service来决定将请求交给哪个pod处理，所以可以看到多次执行，发现每次处理的pod都不一样；如果希望特定客户端产生的所有请求每次都指向同一个pod, 可以设置服务的sessionAffinity属性为ClientIP；")]),s._v(" "),a("h4",{attrs:{id:"_1-1配置会话黏性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1配置会话黏性"}},[s._v("#")]),s._v(" 1.1配置会话黏性")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("apiVersion: v1\nkind: Service\nmetadata:\n  name: kubia\nspec:\n  sessionAffinity: ClientIP\n  ports:\n  - port: 80\n    targetPort: 8080\n  selector:\n    app: kubia\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("除了添加了sessionAffinity: ClientIP，其他都一样")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[d:\\k8s]$ kubectl delete svc kubia\nservice \"kubia\" deleted\n\n[d:\\k8s]$ kubectl create -f kubia-svc-client-ip-session-affinity.yaml\nservice/kubia created\n\n[d:\\k8s]$ kubectl get svc\nNAME         TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)   AGE\nkubernetes   ClusterIP   10.96.0.1     <none>        443/TCP   6d15h\nkubia        ClusterIP   10.96.51.99   <none>        80/TCP    25s\n\n[d:\\k8s]$ kubectl exec kubia-6dxn7 -- curl -s http://10.96.51.99\nYou've hit kubia-fhxht\n\n[d:\\k8s]$ kubectl exec kubia-6dxn7 -- curl -s http://10.96.51.99\nYou've hit kubia-fhxht\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h4",{attrs:{id:"_1-2-同一个服务暴露多个端口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-同一个服务暴露多个端口"}},[s._v("#")]),s._v(" 1.2 同一个服务暴露多个端口")]),s._v(" "),a("p",[s._v("如果pod监听了两个或者多个端口，那么服务同样可以暴露多个端口：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("apiVersion: v1\nkind: Service\nmetadata:\n  name: kubia\nspec:\n  ports:\n  - name: http\n    port: 80\n    targetPort: 8080\n  - name: https\n    port: 443\n    targetPort: 8080\n  selector:\n    app: kubia\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("因为Node.js只监听了8080一个端口，所以这里在Service里面配置两个端口都指向同一个目标端口，看是否都能访问：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[d:\\k8s]$ kubectl create -f kubia-svc-named-ports.yaml\nservice/kubia created\n\n[d:\\k8s]$ kubectl get svc\nNAME         TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)          AGE\nkubernetes   ClusterIP   10.96.0.1      <none>        443/TCP          6d18h\nkubia        ClusterIP   10.96.13.178   <none>        80/TCP,443/TCP   7s\n\n[d:\\k8s]$ kubectl exec kubia-6dxn7 -- curl -s http://10.96.13.178\nYou've hit kubia-fpvc7\n\n[d:\\k8s]$ kubectl exec kubia-6dxn7 -- curl -s http://10.96.13.178:443\nYou've hit kubia-fpvc7\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("可以发现使用两个端口都可以访问；")]),s._v(" "),a("h4",{attrs:{id:"_1-3-使用命名的端口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-使用命名的端口"}},[s._v("#")]),s._v(" 1.3 使用命名的端口")]),s._v(" "),a("p",[s._v("在Service中指定了端口为8080，如果目标端口变了这里也需要改变，可以在定义pod的模版中给端口命名，在Service中可以直接指定名称:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("apiVersion: v1\nkind: ReplicationController\nmetadata: \n   name: kubia\nspec: \n   replicas: 3\n   selector: \n      app: kubia\n   template:\n      metadata: \n         labels:\n            app: kubia\n      spec: \n         containers: \n         - name: kubia\n           image: ksfzhaohui/kubia\n           ports: \n           - name: http\n             containerPort: 8080\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[s._v("在之前的ReplicationController中稍作修改，在port是中指定了名称，Service的yaml文件同样做修改，直接使用名称：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("apiVersion: v1\nkind: Service\nmetadata:\n  name: kubia\nspec:\n  ports:\n  - port: 80\n    targetPort: http\n  selector:\n    app: kubia\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("targetPort直接使用了名称http：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[d:\\k8s]$ kubectl create -f kubia-rc2.yaml\nreplicationcontroller/kubia created\n\n[d:\\k8s]$ kubectl get pod\nNAME          READY   STATUS    RESTARTS   AGE\nkubia-4m9nv   1/1     Running   0          66s\nkubia-bm6rx   1/1     Running   0          66s\nkubia-dh87r   1/1     Running   0          66s\n\n[d:\\k8s]$ kubectl create -f kubia-svc2.yaml\nservice/kubia created\n\n[d:\\k8s]$ kubectl get svc\nNAME         TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)   AGE\nkubernetes   ClusterIP   10.96.0.1      <none>        443/TCP   7d\nkubia        ClusterIP   10.96.106.37   <none>        80/TCP    10s\n\n[d:\\k8s]$ kubectl exec kubia-4m9nv -- curl -s http://10.96.106.37\nYou've hit kubia-dh87r\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("h3",{attrs:{id:"_2-服务发现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-服务发现"}},[s._v("#")]),s._v(" 2.服务发现")]),s._v(" "),a("p",[s._v("服务给我们提供了一个单一不变的ip去访问pod，那是否每次都要先创建服务，然后找到服务的CLUSTER-IP，再给其他pod去使用；这样就太麻烦了，Kubernets还提供了其他方式去访问服务；")]),s._v(" "),a("h4",{attrs:{id:"_2-1-通过环境变量发现服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-通过环境变量发现服务"}},[s._v("#")]),s._v(" 2.1 通过环境变量发现服务")]),s._v(" "),a("p",[s._v("在pod开始运行的时候，Kubernets会初始化一系列的环境变量指向现在存在的服务；如果创建的服务早于客户端pod的创建，pod上的进程可以根据环境变量获得服务的IP地址和端口号；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[d:\\k8s]$ kubectl get svc\nNAME         TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)   AGE\nkubernetes   ClusterIP   10.96.0.1      <none>        443/TCP   7d14h\nkubia        ClusterIP   10.96.106.37   <none>        80/TCP    14h\n\n[d:\\k8s]$ kubectl get pod\nNAME          READY   STATUS    RESTARTS   AGE\nkubia-4m9nv   1/1     Running   0          14h\nkubia-bm6rx   1/1     Running   0          14h\nkubia-dh87r   1/1     Running   0          14h\n\n[d:\\k8s]$ kubectl exec kubia-4m9nv env\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nHOSTNAME=kubia-4m9nv\nKUBERNETES_SERVICE_PORT_HTTPS=443\nKUBERNETES_PORT=tcp://10.96.0.1:443\nKUBERNETES_PORT_443_TCP=tcp://10.96.0.1:443\nKUBERNETES_PORT_443_TCP_PROTO=tcp\nKUBERNETES_PORT_443_TCP_PORT=443\nKUBERNETES_PORT_443_TCP_ADDR=10.96.0.1\nKUBERNETES_SERVICE_HOST=10.96.0.1\nKUBERNETES_SERVICE_PORT=443\nNPM_CONFIG_LOGLEVEL=info\nNODE_VERSION=7.10.1\nYARN_VERSION=0.24.4\nHOME=/root\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br")])]),a("p",[s._v("因为这里的pod早于服务的创建，所有没有相关服务的相关信息：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('[d:\\k8s]$ kubectl delete po --all\npod "kubia-4m9nv" deleted\npod "kubia-bm6rx" deleted\npod "kubia-dh87r" deleted\n\n[d:\\k8s]$ kubectl get pod\nNAME          READY   STATUS    RESTARTS   AGE\nkubia-599v9   1/1     Running   0          48s\nkubia-8s8j4   1/1     Running   0          48s\nkubia-dm6kr   1/1     Running   0          48s\n\n[d:\\k8s]$ kubectl exec kubia-599v9 env\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nHOSTNAME=kubia-599v9\n...\nKUBIA_SERVICE_HOST=10.96.106.37\nKUBIA_SERVICE_PORT=80\n...\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[s._v("如果删除pod重新创建新的pod，这样服务就在创建pod之前了，再次获取环境变量可以发现有KUBIA_SERVICE_HOST和KUBIA_SERVICE_PORT，分别代表了kubia服务的IP地址和端口号；这样就可以通过环境变量去获取IP和端口了；")]),s._v(" "),a("h4",{attrs:{id:"_2-2-通过dns发现服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-通过dns发现服务"}},[s._v("#")]),s._v(" 2.2 通过DNS发现服务")]),s._v(" "),a("p",[s._v("命名空间kube-system下有一个默认的服务kube-dns，其后端是一个coredns的pod：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[d:\\k8s]$ kubectl get svc --namespace kube-system\nNAME       TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)                  AGE\nkube-dns   ClusterIP   10.96.0.10   <none>        53/UDP,53/TCP,9153/TCP   9d\n\n[d:\\k8s]$ kubectl get po -o wide --namespace kube-system\nNAME                               READY   STATUS    RESTARTS   AGE   IP               NODE       NOMINATED NODE   READINESS GATES\ncoredns-7f9c544f75-h2cwn           1/1     Running   0          9d    172.17.0.3       minikube   <none>           <none>\ncoredns-7f9c544f75-x2ttk           1/1     Running   0          9d    172.17.0.2       minikube   <none>           <none>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("运行在pod上的进程DNS查询都会被Kubernets自身的DNS服务器响应，该服务器知道系统中运行的所有服务；客户端的pod在知道服务名称的情况下可以通过全限定域名(FQDN)来访问")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[d:\\k8s]$ kubectl exec kubia-599v9 -- curl -s http://kubia.default.svc.cluster.local\nYou've hit kubia-8s8j4\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("kubia对应服务名称，default为服务所在的命名空间，svc.cluster.local是在所有集群本地服务名称中使用的可配置集群域后缀；如果两个pod在同一个命名空间下，可以省略svc.cluster.local和default，使用服务名即可：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[d:\\k8s]$ kubectl exec kubia-599v9 -- curl -s http://kubia.default\nYou've hit kubia-dm6kr\n\n[d:\\k8s]$ kubectl exec kubia-599v9 -- curl -s http://kubia\nYou've hit kubia-dm6kr\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h4",{attrs:{id:"_2-3-在pod中运行shell"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-在pod中运行shell"}},[s._v("#")]),s._v(" 2.3 在pod中运行shell")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("d:\\k8s>winpty kubectl exec -it kubia-599v9 -- sh\n# curl -s http://kubia\nYou've hit kubia-dm6kr\n# exit\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("通过kubectl exec命令在一个pod容器上运行bash，这样就无须为每个要运行的命令执行kubectl exec命令；因为在windows环境下使用了winpty工具；")]),s._v(" "),a("h2",{attrs:{id:"连接集群外部的服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#连接集群外部的服务"}},[s._v("#")]),s._v(" 连接集群外部的服务")]),s._v(" "),a("p",[s._v("以上介绍的后端是集群中运行的一个或多个pod的服务；但也存在希望通过Kubernetes服务特性暴露外部服务的情况，可以通过Endpoint方式和外部服务别名的方式；")]),s._v(" "),a("h3",{attrs:{id:"_1-endpoint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-endpoint"}},[s._v("#")]),s._v(" 1.Endpoint")]),s._v(" "),a("p",[s._v("服务并不是和pod直接相连的；有一种资源介于两者之间：它就是Endpoint资源")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[d:\\k8s]$ kubectl describe svc kubia\nName:              kubia\nNamespace:         default\nLabels:            <none>\nAnnotations:       <none>\nSelector:          app=kubia\nType:              ClusterIP\nIP:                10.96.106.37\nPort:              <unset>  80/TCP\nTargetPort:        http/TCP\nEndpoints:         172.17.0.10:8080,172.17.0.11:8080,172.17.0.9:8080\nSession Affinity:  None\nEvents:            <none>\n\n[d:\\k8s]$ kubectl get pod -o wide\nNAME          READY   STATUS    RESTARTS   AGE     IP            NODE       NOMINATED NODE   READINESS GATES\nkubia-599v9   1/1     Running   0          3h51m   172.17.0.10   minikube   <none>           <none>\nkubia-8s8j4   1/1     Running   0          3h51m   172.17.0.11   minikube   <none>           <none>\nkubia-dm6kr   1/1     Running   0          3h51m   172.17.0.9    minikube   <none>           <none>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[s._v("可以看到Endpoints对应其实就是pod的IP和端口；当客户端连接到服务时，服务代理选择这些IP和端口对中的一个，并将传入连接重定向到在该位置监听的服务器；")]),s._v(" "),a("h3",{attrs:{id:"_2-手动配置服务的endpoint-内部"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-手动配置服务的endpoint-内部"}},[s._v("#")]),s._v(" 2.手动配置服务的endpoint（内部）")]),s._v(" "),a("p",[s._v("如果创建了不包含pod选择器的服务，Kubernetes将不会创建Endpoint资源；这样就需要创建Endpoint资源来指定该服务的Endpoint列表；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("apiVersion: v1\nkind: Service\nmetadata:\n  name: external-service\nspec:\n  ports:\n  - port: 80\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("如上定义没有指定selector选择器：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[d:\\k8s]$ kubectl create -f external-service.yaml\nservice/external-service created\n\n[d:\\k8s]$ kubectl get svc external-service\nNAME               TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE\nexternal-service   ClusterIP   10.96.241.116   <none>        80/TCP    74s\n\n[d:\\k8s]$ kubectl describe svc external-service\nName:              external-service\nNamespace:         default\nLabels:            <none>\nAnnotations:       <none>\nSelector:          <none>\nType:              ClusterIP\nIP:                10.96.241.116\nPort:              <unset>  80/TCP\nTargetPort:        80/TCP\nEndpoints:         <none>\nSession Affinity:  None\nEvents:            <none>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("p",[s._v("可以发现因为没有指定selector选择器，external-service的Endpoints为none，这种情况可以手动配置服务的Endpoint；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("apiVersion: v1\nkind: Endpoints\nmetadata:\n  name: external-service\nsubsets:\n  - addresses:\n    - ip: 172.17.0.9\n    - ip: 172.17.0.10\n    ports:\n    - port: 8080\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("Endpoint对象需要与服务具有相同的名称，并包含该服务的目标IP地址和端口列表：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[d:\\k8s]$ kubectl create -f external-service-endpoints.yaml\nendpoints/external-service created\n\n[d:\\k8s]$ kubectl describe svc external-service\nName:              external-service\nNamespace:         default\nLabels:            <none>\nAnnotations:       <none>\nSelector:          <none>\nType:              ClusterIP\nIP:                10.96.241.116\nPort:              <unset>  80/TCP\nTargetPort:        80/TCP\nEndpoints:         172.17.0.10:8080,172.17.0.9:8080\nSession Affinity:  None\nEvents:            <none>\n\n[d:\\k8s]$ kubectl exec kubia-599v9 -- curl -s http://external-service\nYou've hit kubia-dm6kr\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[s._v("可以发现再创建完Endpoints之后，服务external-service的Endpoints中多了pod的ip地址和端口，同样也可以通过kubectl exec执行请求；")]),s._v(" "),a("h3",{attrs:{id:"_3-手动配置服务的endpoint-外部"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-手动配置服务的endpoint-外部"}},[s._v("#")]),s._v(" 3.手动配置服务的endpoint（外部）")]),s._v(" "),a("p",[s._v("以上在endpoint配置的是kubernetes内部的ip端口，同样也可以配置外部的ip端口，在kubernetes外部启动一个服务：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("apiVersion: v1\nkind: Endpoints\nmetadata:\n  name: external-service\nsubsets:\n  - addresses:\n    - ip: 10.13.82.21\n    ports:\n    - port: 8080\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("以上配置的10.13.82.21:8080就是一个普通的tomcat服务，在本机启动即可")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[d:\\k8s]$ kubectl create -f external-service-endpoints2.yaml\nendpoints/external-service created\n\n[d:\\k8s]$ kubectl create -f external-service.yaml\nservice/external-service created\n\n[d:\\k8s]$ kubectl exec kubia-599v9 -- curl -s http://external-service\nok\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("经测试可以返回外部服务的响应")]),s._v(" "),a("h3",{attrs:{id:"_4-创建外部服务别名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-创建外部服务别名"}},[s._v("#")]),s._v(" 4.创建外部服务别名")]),s._v(" "),a("p",[s._v("除了手动配置服务的Endpoint来代替公开外部服务方法，还可以通过给外部服务指定一个别名，比如给10.13.82.21指定一个域名：api.ksfzhaohui.com")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("apiVersion: v1\nkind: Service\nmetadata:\n  name: external-service\nspec:\n  type: ExternalName\n  externalName: api.ksfzhaohui.com\n  ports:\n  - port: 80\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("要创建一个具有别名的外部服务的服务时，要将创建服务资源的一个type字段设置为ExternalName；在externalName中指定外服服务的域名：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[d:\\k8s]$ kubectl create -f external-service-externalname.yaml\nservice/external-service created\n\n[d:\\k8s]$ kubectl exec kubia-599v9 -- curl -s http://external-service:8080\nok\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("经测试可以返回外部服务的响应")]),s._v(" "),a("h2",{attrs:{id:"将服务暴露给外部客户端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将服务暴露给外部客户端"}},[s._v("#")]),s._v(" 将服务暴露给外部客户端")]),s._v(" "),a("p",[s._v("向外部公开某些服务，kubernetes提供了三种方式：NodePort服务，LoadBalance服务以及Ingress资源方式，下面分别介绍及实战；")]),s._v(" "),a("h3",{attrs:{id:"_1-nodeport类型的服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-nodeport类型的服务"}},[s._v("#")]),s._v(" 1.NodePort类型的服务")]),s._v(" "),a("p",[s._v("创建一个服务并将其类型设置为NodePort，通过创建NodePort服务，可以让kubernetes在其所有节点上保留一个端口（所有节点上都使用相同的端口号），然后将传入的连接转发给pod；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("apiVersion: v1\nkind: Service\nmetadata:\n  name: kubia-nodeport\nspec:\n  type: NodePort\n  ports:\n  - port: 80\n    targetPort: 8080\n    nodePort: 30123\n  selector:\n    app: kubia\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("指定服务类型为NodePort，节点端口为30123；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("d:\\k8s]$ kubectl create -f kubia-svc-nodeport.yaml\nservice/kubia-nodeport created\n\n[d:\\k8s]$ kubectl get svc\nNAME             TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)        AGE\nkubernetes       ClusterIP   10.96.0.1     <none>        443/TCP        31d\nkubia-nodeport   NodePort    10.96.59.16   <none>        80:30123/TCP   3s\n\n[d:\\k8s]$ kubectl exec kubia-7fs6m -- curl -s http://10.96.59.16\nYou've hit kubia-m487j\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("要外部可以访问内部pod服务，需要知道节点的IP，我们这里使用的节点为minikube，因为这里的minikube是安装在本地windows系统下，可以直接使用minikube的内部ip进行访问")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("d:\\k8s]$ kubectl get nodes -o wide\nNAME       STATUS   ROLES    AGE   VERSION   INTERNAL-IP      EXTERNAL-IP   OS-IMAGE              KERNEL-VERSION   CONTAINER-RUNTIME\nminikube   Ready    master   34d   v1.17.0   192.168.99.108   <none>        Buildroot 2019.02.7   4.19.81          docker://19.3.5\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-5e85cb7ccfa15a14d2ce94c4bb6c6524e7d.png",alt:""}})]),s._v(" "),a("h3",{attrs:{id:"_2-loadbalance类型服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-loadbalance类型服务"}},[s._v("#")]),s._v(" 2.LoadBalance类型服务")]),s._v(" "),a("p",[s._v("相比NodePort方式可以通过任何节点的30312端口访问内部的pod，LoadBalance方式拥有自己独一无二的可公开访问的IP地址；LoadBalance其实是NodePort的一种扩展，使得服务可以通过一个专用的负载均衡器来访问；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("apiVersion: v1\nkind: Service\nmetadata:\n  name: kubia-loadbalancer\nspec:\n  type: LoadBalancer\n  ports:\n  - port: 80\n    targetPort: 8080\n  selector:\n    app: kubia\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("指定服务类型为LoadBalancer，无需指定节点端口；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("d:\\k8s]$ kubectl create -f kubia-svc-loadbalancer.yaml\nservice/kubia-loadbalancer created\n\n[d:\\k8s]$ kubectl get svc\nNAME                 TYPE           CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE\nkubernetes           ClusterIP      10.96.0.1       <none>        443/TCP        31d\nkubia-loadbalancer   LoadBalancer   10.96.207.113   <pending>     80:30038/TCP   7s\nkubia-nodeport       NodePort       10.96.59.16     <none>        80:30123/TCP   32m\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("可以看到虽然我们没有指定节点端口，但是创建完之后自动启动了30038节点端口"),a("br"),s._v(" "),a("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-41ee73ade89baecd312ff568468182f56d2.png",alt:""}}),a("br"),s._v("\n所以可以发现同样能通过使用NodePort的方式来访问服务（节点IP+节点端口）；同时也可以通过EXTERNAL-IP来访问，但是使用Minikube，就不会有外部IP地址，外部IP地址将会一直是pending状态；")]),s._v(" "),a("h3",{attrs:{id:"_3-了解并防止不必要的网络跳数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-了解并防止不必要的网络跳数"}},[s._v("#")]),s._v(" 3.了解并防止不必要的网络跳数")]),s._v(" "),a("p",[s._v("当外部客户端通过节点端口连接到服务时，随机选择的pod并不一定在接收连接的同一节点上运行；可以通过将服务配置为仅将外部通信重定向到接收连接的节点上运行的pod来阻止此额外跳数；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("apiVersion: v1\nkind: Service\nmetadata:\n  name: kubia-nodeport-onlylocal\nspec:\n  type: NodePort\n  externalTrafficPolicy: Local\n  ports:\n  - port: 80\n    targetPort: 8080\n    nodePort: 30124\n  selector:\n    app: kubia\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("通过在服务的spec部分中设置externalTrafficPolicy字段来完成；")]),s._v(" "),a("h3",{attrs:{id:"_4-ingress类型服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-ingress类型服务"}},[s._v("#")]),s._v(" 4.Ingress类型服务")]),s._v(" "),a("p",[s._v("每个LoadBalancer服务都需要自己的负载均衡器，以及独有的公有IP地址；而Ingress 只需要一个公网IP就能为许多服务提供访问；当客户端向Ingress发送HTTP请求时，Ingress会根据请求的主机名和路径转发到对应的服务；")]),s._v(" "),a("h4",{attrs:{id:"_4-1-ingress控制器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-ingress控制器"}},[s._v("#")]),s._v(" 4.1 Ingress控制器")]),s._v(" "),a("p",[s._v("只有Ingress控制器在集群中运行，Ingress资源才能正常工作；不同的Kubernetes环境使用不同的控制器实现，但有些并不提供默认控制器；我这里使用的Minikube需要启用附加组件才可以使用控制器；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[d:\\Program Files\\Kubernetes\\Minikube]$ minikube addons list\n- addon-manager: enabled\n- dashboard: enabled\n- default-storageclass: enabled\n- efk: disabled\n- freshpod: disabled\n- gvisor: disabled\n- helm-tiller: disabled\n- ingress: disabled\n- ingress-dns: disabled\n- logviewer: disabled\n- metrics-server: disabled\n- nvidia-driver-installer: disabled\n- nvidia-gpu-device-plugin: disabled\n- registry: disabled\n- registry-creds: disabled\n- storage-provisioner: enabled\n- storage-provisioner-gluster: disabled\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[s._v("列出所有的附件组件，可以看到ingress是不可用的，所以需要开启")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[d:\\Program Files\\Kubernetes\\Minikube]$ minikube addons enable ingress\n* ingress was successfully enabled\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("启动之后可以查看kube-system命名空间下的pod")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[d:\\k8s]$ kubectl get pods -n kube-system\nNAME                                        READY   STATUS              RESTARTS   AGE\ncoredns-7f9c544f75-h2cwn                    1/1     Running             0          55d\ncoredns-7f9c544f75-x2ttk                    1/1     Running             0          55d\netcd-minikube                               1/1     Running             0          55d\nkube-addon-manager-minikube                 1/1     Running             0          55d\nkube-apiserver-minikube                     1/1     Running             0          55d\nkube-controller-manager-minikube            1/1     Running             2          55d\nkube-proxy-xtbc4                            1/1     Running             0          55d\nkube-scheduler-minikube                     1/1     Running             2          55d\nnginx-ingress-controller-6fc5bcc8c9-nvcb5   0/1     ContainerCreating   0          8s\nstorage-provisioner                         1/1     Running             0          55d\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("可以发现正在创建一个名称为nginx-ingress-controller的pod，会一直停留在拉取镜像状态，并显示如下错误：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('Failed to pull image "quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.26.1": rpc error: code = Unknown desc = context canceled\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这是因为国内无法下载quay.io下面的镜像，可以使用阿里云镜像：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("image: registry.aliyuncs.com/google_containers/nginx-ingress-controller:0.26.1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("可以从"),a("a",{attrs:{href:"https://github.com/kubernetes/ingress-nginx",target:"_blank",rel:"noopener noreferrer"}},[s._v("ingress-nginx"),a("OutboundLink")],1),s._v("下的deploy/static/mandatory.yaml文件修改其中的镜像为阿里云镜像，然后重新创建即可：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[d:\\k8s]$ kubectl create -f mandatory.yaml\nnamespace/ingress-nginx created\nconfigmap/nginx-configuration created\nconfigmap/tcp-services created\nconfigmap/udp-services created\nserviceaccount/nginx-ingress-serviceaccount created\nclusterrole.rbac.authorization.k8s.io/nginx-ingress-clusterrole created\nrole.rbac.authorization.k8s.io/nginx-ingress-role created\nrolebinding.rbac.authorization.k8s.io/nginx-ingress-role-nisa-binding created\nclusterrolebinding.rbac.authorization.k8s.io/nginx-ingress-clusterrole-nisa-binding created\ndeployment.apps/nginx-ingress-controller created\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("再次查看kube-system命名空间下的pod")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[d:\\k8s]$ kubectl get pods -n kube-system\nNAME                                        READY   STATUS    RESTARTS   AGE\ncoredns-7f9c544f75-h2cwn                    1/1     Running   0          56d\ncoredns-7f9c544f75-x2ttk                    1/1     Running   0          56d\netcd-minikube                               1/1     Running   0          56d\nkube-addon-manager-minikube                 1/1     Running   0          56d\nkube-apiserver-minikube                     1/1     Running   0          56d\nkube-controller-manager-minikube            1/1     Running   2          56d\nkube-proxy-xtbc4                            1/1     Running   0          56d\nkube-scheduler-minikube                     1/1     Running   2          56d\nnginx-ingress-controller-6fc5bcc8c9-nvcb5   1/1     Running   0          10m\nstorage-provisioner                         1/1     Running   0          56d\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("nginx-ingress-controller已经为Running状态，下面就可以使用Ingress资源了；")]),s._v(" "),a("h4",{attrs:{id:"_4-2-ingress资源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-ingress资源"}},[s._v("#")]),s._v(" 4.2 Ingress资源")]),s._v(" "),a("p",[s._v("Ingress控制器启动之后，就可以创建Ingress资源了")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: kubia\nspec:\n  rules:\n  - host: kubia.example.com\n    http:\n      paths:\n      - path: /\n        backend:\n          serviceName: kubia-nodeport\n          servicePort: 80\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("指定资源类型为Ingress，定一个单一规则，所有发送kubia.example.com的请求都会被转发给端口为80的kubia-nodeport服务上；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[d:\\k8s]$ kubectl get svc\nNAME             TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE\nkubernetes       ClusterIP   10.96.0.1       <none>        443/TCP        53d\nkubia-nodeport   NodePort    10.96.204.104   <none>        80:30123/TCP   21h\n\n[d:\\k8s]$ kubectl create -f kubia-ingress.yaml\ningress.extensions/kubia created\n\n[d:\\k8s]$ kubectl get ingress\nNAME    HOSTS               ADDRESS          PORTS   AGE\nkubia   kubia.example.com   192.168.99.108   80      6m4s\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("需要把域名映射到ADDRESS:192.168.99.108，修改hosts文件即可，下面就可以直接用域名访问了，最终请求会被转发到kubia-nodeport服务"),a("br"),s._v(" "),a("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-713668ad1126027bc1e2f35070d8fcffb57.png",alt:""}})]),s._v(" "),a("p",[a("strong",[s._v("大致请求流程如下")]),s._v("：浏览器中请求域名首先会查询域名服务器，然后DNS返回了控制器的IP地址；客户端向控制器发送请求并在头部指定了kubia.example.com；然后控制器根据头部信息确定客户端需要访问哪个服务；然后通过服务关联的Endpoint对象查看pod IP，并将请求转发给其中一个；")]),s._v(" "),a("h4",{attrs:{id:"_4-3-ingress暴露多个服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-ingress暴露多个服务"}},[s._v("#")]),s._v(" 4.3 Ingress暴露多个服务")]),s._v(" "),a("p",[s._v("rules和paths是数组，可以配置多个")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: kubia2\nspec:\n  rules:\n  - host: kubia.example.com\n    http:\n      paths:\n      - path: /v1\n        backend:\n          serviceName: kubia-nodeport\n          servicePort: 80\n      - path: /v2\n        backend:\n          serviceName: kubia-nodeport\n          servicePort: 80\n  - host: kubia2.example.com\n    http:\n      paths:\n      - path: /\n        backend:\n          serviceName: kubia-nodeport\n          servicePort: 80\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])]),a("p",[s._v("配置了多个host和path，这里为了方便映射了同样服务；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[d:\\k8s]$ kubectl create -f kubia-ingress2.yaml\ningress.extensions/kubia2 created\n\n[d:\\k8s]$ kubectl get ingress\nNAME     HOSTS                                  ADDRESS          PORTS   AGE\nkubia    kubia.example.com                      192.168.99.108   80      41m\nkubia2   kubia.example.com,kubia2.example.com   192.168.99.108   80      15m\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("同样需要配置host文件，测试如下："),a("br"),s._v(" "),a("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-bd1e8363555ccd405089dce3bd3e1219825.png",alt:""}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-c4c402b64f608ecb39524294ec2b299c80a.png",alt:""}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-c6a29b9a53b2371c5832fb3aa6d4a6b470b.png",alt:""}})]),s._v(" "),a("h4",{attrs:{id:"_4-4-配置ingress处理tls传输"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-配置ingress处理tls传输"}},[s._v("#")]),s._v(" 4.4 配置Ingress处理TLS传输")]),s._v(" "),a("p",[s._v("以上介绍的消息都是基于Http协议，Https协议需要配置相关证书；客户端创建到Ingress控制器的TLS连接时，控制器将终止TLS连接；客户端与Ingress控制器之间是加密的，而Ingress控制器和pod之间没有加密；要使控制器可以这样，需要将证书和私钥附加到Ingress中；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[root@localhost batck-job]# openssl genrsa -out tls.key 2048\nGenerating RSA private key, 2048 bit long modulus\n..................................................................+++\n........................+++\ne is 65537 (0x10001)\n[root@localhost batck-job]# openssl req -new -x509 -key tls.key -out tls.cert -days 360 -subj /CN=kubia.example.com\n\n[root@localhost batck-job]# ll\n-rw-r--r--. 1 root root 1115 Feb 11 01:20 tls.cert\n-rw-r--r--. 1 root root 1679 Feb 11 01:20 tls.key\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("生成的两个文件创建secret")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[d:\\k8s]$ kubectl create secret tls tls-secret --cert=tls.cert --key=tls.key\nsecret/tls-secret created\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("现在可以更新Ingress对象，以便它也接收kubia.example.com的HTTPS请求；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: kubia\nspec:\n  tls:\n  - hosts: \n    - kubia.example.com\n    secretName: tls-secret\n  rules:\n  - host: kubia.example.com\n    http:\n      paths:\n      - path: /\n        backend:\n          serviceName: kubia-nodeport\n          servicePort: 80\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[s._v("tls中指定相关证书")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[d:\\k8s]$ kubectl apply -f kubia-ingress-tls.yaml\nWarning: kubectl apply should be used on resource created by either kubectl create --save-config or kubectl apply\ningress.extensions/kubia configured\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("通过浏览器访问https协议，如下图所示"),a("br"),s._v(" "),a("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-068adf47131466e28e303511c0a88e7a73a.png",alt:""}})]),s._v(" "),a("h2",{attrs:{id:"pod就绪信号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pod就绪信号"}},[s._v("#")]),s._v(" Pod就绪信号")]),s._v(" "),a("p",[s._v("只要pod的标签和服务的pod选择器想匹配，pod就可以作为服务的后端，但是如果pod没有准备好，是不能处理请求的，这时候就需要就绪探针了，用来检查pod是否已经准备好了，如果检查成功就可以作为服务的后端处理消息了；")]),s._v(" "),a("h3",{attrs:{id:"_1-就绪探针类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-就绪探针类型"}},[s._v("#")]),s._v(" 1.就绪探针类型")]),s._v(" "),a("p",[s._v("就绪探针有三种类型分别：")]),s._v(" "),a("ul",[a("li",[s._v("Exec探针：执行进程的地方，容器的状态由进程的退出状态代码确认；")]),s._v(" "),a("li",[s._v("Http get探针：向容器发送HTTP GET请求，通过响应的HTTP状态代码判断容器是否准备好；")]),s._v(" "),a("li",[s._v("Tcp socket探针：它打开一个TCP连接到容器的指定端口，如果连接己建立，则认为容器己准备就绪。")])]),s._v(" "),a("p",[s._v("kubernetes会周期性地调用探针，并根据就绪探针的结果采取行动。如果某个pod报告它尚未准备就绪，则会从该服务中删除该pod。如果pod再次准备就绪，则重新添加pod；")]),s._v(" "),a("h3",{attrs:{id:"_2-向pod添加就行探针"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-向pod添加就行探针"}},[s._v("#")]),s._v(" 2.向pod添加就行探针")]),s._v(" "),a("p",[s._v("编辑ReplicationController，修改pod模版添加就绪探针")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[d:\\k8s]$ kubectl edit rc kubia\nlibpng warning: iCCP: known incorrect sRGB profile\nreplicationcontroller/kubia edited\n\n[d:\\k8s]$ kubectl get pods\nNAME          READY   STATUS    RESTARTS   AGE\nkubia-7fs6m   1/1     Running   0          22d\nkubia-m487j   1/1     Running   0          22d\nkubia-q6z5w   1/1     Running   0          22d\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("编辑ReplicationController如下所示，添加readinessProbe")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("apiVersion: v1\nkind: ReplicationController\nmetadata: \n   name: kubia\nspec: \n   replicas: 3\n   selector: \n      app: kubia\n   template:\n      metadata: \n         labels:\n            app: kubia\n      spec: \n         containers: \n         - name: kubia\n           image: ksfzhaohui/kubia\n           ports: \n           - containerPort: 8080\n           readinessProbe:\n           exec:\n            command:\n            - ls\n            - /var/ready\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("p",[s._v("就绪探针将定期在容器内执行ls/var/ready命令。如果文件存在，则ls命令返回退出码 0, 否则返回非零的退出码；如果文件存在，则就绪探针将成功，否则失败；"),a("br"),s._v("\n我们编辑完ReplicationController还没有产生新的pod所以可以发现以上pod的READY都为1，表示已经准备好可以处理消息；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('[d:\\k8s]$ kubectl delete pod kubia-m487j\npod "kubia-m487j" deleted\n\n[d:\\k8s]$ kubectl get pods\nNAME          READY   STATUS    RESTARTS   AGE\nkubia-7fs6m   1/1     Running   0          22d\nkubia-cxz5v   0/1     Running   0          114s\nkubia-q6z5w   1/1     Running   0          22d\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("删除一个pod，马上会创建一个带有就绪探针的pod，可以发现长时间READY为0；")]),s._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),a("p",[s._v("本文首先介绍了服务的基本知识，如何创建服务发现服务；然后介绍了服务和pod直接的关联器endpoint；最后重点介绍了将服务暴露给外部客户端的三种方式。")]),s._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),a("p",[s._v("Kubernetes in Action")])])}),[],!1,null,null,null);n.default=t.exports}}]);