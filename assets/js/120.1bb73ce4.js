(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{546:function(s,e,n){"use strict";n.r(e);var a=n(15),i=Object(a.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" "),n("strong",[s._v("前言")])]),s._v(" "),n("p",[s._v("在上文Tomcat Session管理分析介绍了使用tomcat-redis-session-manager来集中式管理session，其中一个局限性就是必须使用tomcat容器；本文介绍的spring-session也能实现session的集中式管理，并且不局限于某种容器；")]),s._v(" "),n("h2",{attrs:{id:"spring-session管理session实战"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#spring-session管理session实战"}},[s._v("#")]),s._v(" "),n("strong",[s._v("spring-session管理session实战")])]),s._v(" "),n("h3",{attrs:{id:"_1-maven依赖的jar"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-maven依赖的jar"}},[s._v("#")]),s._v(" 1.maven依赖的jar")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<dependency>\n    <groupId>org.springframework.session</groupId>\n    <artifactId>spring-session-data-redis</artifactId>\n    <version>1.3.1.RELEASE</version>\n    <type>pom</type>\n</dependency>\n<dependency>\n    <groupId>biz.paluch.redis</groupId>\n    <artifactId>lettuce</artifactId>\n    <version>3.5.0.Final</version>\n</dependency>\n<dependency>\n         <groupId>org.springframework</groupId>\n         <artifactId>spring-web</artifactId>\n         <version>4.3.4.RELEASE</version>\n</dependency>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("h3",{attrs:{id:"_2-准备spring-session-xml配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-准备spring-session-xml配置文件"}},[s._v("#")]),s._v(" 2.准备spring-session.xml配置文件")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<?xml version="1.0" encoding="UTF-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"\n    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">\n \n    \x3c!--支持注解 --\x3e\n    <context:annotation-config />\n \n    <bean\n        class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration" />\n \n    <bean\n        class="org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory">\n        <property name="hostName" value="localhost" />\n        <property name="port" value="6379" />\n    </bean>\n</beans>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("session同样是使用redis来做集中式存储，为了方便测试使用本地的6379端口redis，LettuceConnectionFactory是redis连接工厂类；"),n("br"),s._v("\nRedisHttpSessionConfiguration可以简单理解为spring-session使用redis来存储session的功能类，此类本身使用了@Configuration注解，@Configuration注解相当于把该类作为spring的xml配置文件中的，此类中包含了很多bean对象同样也是注解"),n("a",{attrs:{href:"https://my.oschina.net/bean",target:"_blank",rel:"noopener noreferrer"}},[s._v("@Bean"),n("OutboundLink")],1),s._v("；")]),s._v(" "),n("h3",{attrs:{id:"_3-准备servelt类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-准备servelt类"}},[s._v("#")]),s._v(" 3.准备servelt类")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('public class SSessionTest extends HttpServlet {\n    private static final long serialVersionUID = 1L;\n \n    public SSessionTest() {\n        super();\n    }\n \n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        response.getWriter().append("sessionId=" + request.getSession().getId());\n    }\n \n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        doGet(request, response);\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("定义了一个简单的servelt，每次请求都在界面打印sessionId；")]),s._v(" "),n("h3",{attrs:{id:"_4-配置web-xml"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-配置web-xml"}},[s._v("#")]),s._v(" 4.配置web.xml")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<?xml version="1.0" encoding="UTF-8"?>\n<web-app>\n    <display-name>Archetype Created Web Application</display-name>\n \n    <context-param>\n        <param-name>contextConfigLocation</param-name>\n        <param-value>classpath*:spring-session.xml</param-value>\n    </context-param>\n \n    <filter>\n        <filter-name>springSessionRepositoryFilter</filter-name>\n        <filter-class>org.springframework.web.filter.DelegatingFilterProxy\n        </filter-class>\n    </filter>\n    <filter-mapping>\n        <filter-name>springSessionRepositoryFilter</filter-name>\n        <url-pattern>/*</url-pattern>\n    </filter-mapping>\n    <listener>\n        <listener-class>org.springframework.web.context.ContextLoaderListener\n        </listener-class>\n    </listener>\n \n    <servlet>\n        <servlet-name>SSessionTest</servlet-name>\n        <display-name>SSessionTest</display-name>\n        <description></description>\n        <servlet-class>zh.maven.ssesion.SSessionTest</servlet-class>\n    </servlet>\n    <servlet-mapping>\n        <servlet-name>SSessionTest</servlet-name>\n        <url-pattern>/SSessionTest</url-pattern>\n    </servlet-mapping>\n</web-app>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br")])]),n("p",[s._v("首先配置了加载类路径下的spring-session.xml配置文件，然后配置了一个名称为springSessionRepositoryFilter的过滤器；这里定义的class是类DelegatingFilterProxy，此类本身并不是过滤器，是一个代理类，可以通过使用targetBeanName参数来指定具体的过滤器类(如下所示)，如果不指定默认就是filter-name指定的名称；")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<init-param>\n    <param-name>targetBeanName</param-name>\n    <param-value>springSessionRepositoryFilter</param-value>\n</init-param>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"_5-测试"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-测试"}},[s._v("#")]),s._v(" 5.测试")]),s._v(" "),n("p",[s._v("浏览器中访问："),n("a",{attrs:{href:"http://localhost/",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://localhost"),n("OutboundLink")],1),s._v(":8080/ssession/SSessionTest，查看结果：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("sessionId=d520abed-829f-4d0d-9b51-5e9bc9c7e7f2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("查看redis")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('127.0.0.1:6379> keys *\n1) "spring:session:expirations:1530194760000"\n2) "spring:session:sessions:expires:d520abed-829f-4d0d-9b51-5e9bc9c7e7f2"\n3) "spring:session:sessions:d520abed-829f-4d0d-9b51-5e9bc9c7e7f2"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"_6-常见问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-常见问题"}},[s._v("#")]),s._v(" 6.常见问题")]),s._v(" "),n("p",[s._v("具体异常如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'springSessionRepositoryFilter' available\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:680)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1183)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:284)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\n    at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1087)\n    at org.springframework.web.filter.DelegatingFilterProxy.initDelegate(DelegatingFilterProxy.java:326)\n    at org.springframework.web.filter.DelegatingFilterProxy.initFilterBean(DelegatingFilterProxy.java:235)\n    at org.springframework.web.filter.GenericFilterBean.init(GenericFilterBean.java:199)\n    at org.apache.catalina.core.ApplicationFilterConfig.initFilter(ApplicationFilterConfig.java:285)\n    at org.apache.catalina.core.ApplicationFilterConfig.getFilter(ApplicationFilterConfig.java:266)\n    at org.apache.catalina.core.ApplicationFilterConfig.<init>(ApplicationFilterConfig.java:108)\n    at org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:4981)\n    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5683)\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:145)\n    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1702)\n    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1692)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:262)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:745)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("p",[s._v("指定的filter找不到实现类，原因是没有使用配置，此配置可以让系统能够识别相应的注解，而在类RedisHttpSessionConfiguration中使用了大量的注解，其中就有个使用@Bean注解的方法；")]),s._v(" "),n("h2",{attrs:{id:"spring-session管理session分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#spring-session管理session分析"}},[s._v("#")]),s._v(" "),n("strong",[s._v("spring-session管理session分析")])]),s._v(" "),n("h3",{attrs:{id:"_1-delegatingfilterproxy代理类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-delegatingfilterproxy代理类"}},[s._v("#")]),s._v(" 1.DelegatingFilterProxy代理类")]),s._v(" "),n("p",[s._v("DelegatingFilterProxy里没有实现过滤器的任何逻辑，具体逻辑在其指定的filter-name过滤器中；")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("@Override\n    protected void initFilterBean() throws ServletException {\n        synchronized (this.delegateMonitor) {\n            if (this.delegate == null) {\n                // If no target bean name specified, use filter name.\n                if (this.targetBeanName == null) {\n                    this.targetBeanName = getFilterName();\n                }\n                // Fetch Spring root application context and initialize the delegate early,\n                // if possible. If the root application context will be started after this\n                // filter proxy, we'll have to resort to lazy initialization.\n                WebApplicationContext wac = findWebApplicationContext();\n                if (wac != null) {\n                    this.delegate = initDelegate(wac);\n                }\n            }\n        }\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("p",[s._v("初始化过滤器，如果没有配置targetBeanName，则直接使用filter-name，这里指定的是springSessionRepositoryFilter，这个名称是一个固定值此filter在RedisHttpSessionConfiguration中被定义；")]),s._v(" "),n("h3",{attrs:{id:"_2-redishttpsessionconfiguration配置类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-redishttpsessionconfiguration配置类"}},[s._v("#")]),s._v(" 2.RedisHttpSessionConfiguration配置类")]),s._v(" "),n("p",[s._v("在RedisHttpSessionConfiguration的父类SpringHttpSessionConfiguration中定义了springSessionRepositoryFilter")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("@Bean\n    public <S extends ExpiringSession> SessionRepositoryFilter<? extends ExpiringSession> springSessionRepositoryFilter(\n            SessionRepository<S> sessionRepository) {\n        SessionRepositoryFilter<S> sessionRepositoryFilter = new SessionRepositoryFilter<S>(\n                sessionRepository);\n        sessionRepositoryFilter.setServletContext(this.servletContext);\n        if (this.httpSessionStrategy instanceof MultiHttpSessionStrategy) {\n            sessionRepositoryFilter.setHttpSessionStrategy(\n                    (MultiHttpSessionStrategy) this.httpSessionStrategy);\n        }\n        else {\n            sessionRepositoryFilter.setHttpSessionStrategy(this.httpSessionStrategy);\n        }\n        return sessionRepositoryFilter;\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("此方法返回值是SessionRepositoryFilter，这个其实就是真实的过滤器；方法参数sessionRepository同样使用@Bean注解的方式定义；")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Bean\n    public RedisOperationsSessionRepository sessionRepository(\n            @Qualifier("sessionRedisTemplate") RedisOperations<Object, Object> sessionRedisTemplate,\n            ApplicationEventPublisher applicationEventPublisher) {\n        RedisOperationsSessionRepository sessionRepository = new RedisOperationsSessionRepository(\n                sessionRedisTemplate);\n        sessionRepository.setApplicationEventPublisher(applicationEventPublisher);\n        sessionRepository\n                .setDefaultMaxInactiveInterval(this.maxInactiveIntervalInSeconds);\n        if (this.defaultRedisSerializer != null) {\n            sessionRepository.setDefaultSerializer(this.defaultRedisSerializer);\n        }\n \n        String redisNamespace = getRedisNamespace();\n        if (StringUtils.hasText(redisNamespace)) {\n            sessionRepository.setRedisKeyNamespace(redisNamespace);\n        }\n \n        sessionRepository.setRedisFlushMode(this.redisFlushMode);\n        return sessionRepository;\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("p",[s._v("此方法的返回值是RedisOperationsSessionRepository，有关于session持久化到redis的相关操作都在此类中；"),n("br"),s._v("\n注：持久化到redis只是spring-session的一种方式，也支持持久化到其他数据库中（jdbc，Mongo，Hazelcast等）；")]),s._v(" "),n("h3",{attrs:{id:"_3-sessionrepositoryfilter过滤器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-sessionrepositoryfilter过滤器"}},[s._v("#")]),s._v(" 3.SessionRepositoryFilter过滤器")]),s._v(" "),n("p",[s._v("所有的请求都会先经过SessionRepositoryFilter过滤器，doFilter方法如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("protected void doFilterInternal(HttpServletRequest request,\n        HttpServletResponse response, FilterChain filterChain)\n        throws ServletException, IOException {\n    request.setAttribute(SESSION_REPOSITORY_ATTR, this.sessionRepository);\n \n    SessionRepositoryRequestWrapper wrappedRequest = new SessionRepositoryRequestWrapper(\n            request, response, this.servletContext);\n    SessionRepositoryResponseWrapper wrappedResponse = new SessionRepositoryResponseWrapper(\n            wrappedRequest, response);\n \n    HttpServletRequest strategyRequest = this.httpSessionStrategy\n            .wrapRequest(wrappedRequest, wrappedResponse);\n    HttpServletResponse strategyResponse = this.httpSessionStrategy\n            .wrapResponse(wrappedRequest, wrappedResponse);\n \n    try {\n        filterChain.doFilter(strategyRequest, strategyResponse);\n    }\n    finally {\n        wrappedRequest.commitSession();\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("p",[s._v("request被包装成了SessionRepositoryRequestWrapper对象，response被包装成了SessionRepositoryResponseWrapper对象，SessionRepositoryRequestWrapper中重写了getSession等方法；finally中执行了commitSession方法，将session进行持久化操作；")]),s._v(" "),n("h3",{attrs:{id:"_4-sessionrepositoryrequestwrapper包装类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-sessionrepositoryrequestwrapper包装类"}},[s._v("#")]),s._v(" 4.SessionRepositoryRequestWrapper包装类")]),s._v(" "),n("p",[s._v("重点看一下重写的getSession方法，代码如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Override\n        public HttpSessionWrapper getSession(boolean create) {\n            HttpSessionWrapper currentSession = getCurrentSession();\n            if (currentSession != null) {\n                return currentSession;\n            }\n            String requestedSessionId = getRequestedSessionId();\n            if (requestedSessionId != null\n                    && getAttribute(INVALID_SESSION_ID_ATTR) == null) {\n                S session = getSession(requestedSessionId);\n                if (session != null) {\n                    this.requestedSessionIdValid = true;\n                    currentSession = new HttpSessionWrapper(session, getServletContext());\n                    currentSession.setNew(false);\n                    setCurrentSession(currentSession);\n                    return currentSession;\n                }\n                else {\n                    // This is an invalid session id. No need to ask again if\n                    // request.getSession is invoked for the duration of this request\n                    if (SESSION_LOGGER.isDebugEnabled()) {\n                        SESSION_LOGGER.debug(\n                                "No session found by id: Caching result for getSession(false) for this HttpServletRequest.");\n                    }\n                    setAttribute(INVALID_SESSION_ID_ATTR, "true");\n                }\n            }\n            if (!create) {\n                return null;\n            }\n            if (SESSION_LOGGER.isDebugEnabled()) {\n                SESSION_LOGGER.debug(\n                        "A new session was created. To help you troubleshoot where the session was created we provided a StackTrace (this is not an error). You can prevent this from appearing by disabling DEBUG logging for "\n                                + SESSION_LOGGER_NAME,\n                        new RuntimeException(\n                                "For debugging purposes only (not an error)"));\n            }\n            S session = SessionRepositoryFilter.this.sessionRepository.createSession();\n            session.setLastAccessedTime(System.currentTimeMillis());\n            currentSession = new HttpSessionWrapper(session, getServletContext());\n            setCurrentSession(currentSession);\n            return currentSession;\n        }\n \n        private S getSession(String sessionId) {\n            S session = SessionRepositoryFilter.this.sessionRepository\n                    .getSession(sessionId);\n            if (session == null) {\n                return null;\n            }\n            session.setLastAccessedTime(System.currentTimeMillis());\n            return session;\n        }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br")])]),n("p",[s._v("大致分为三步，首先去本地内存中获取session，如果获取不到去指定的数据库中获取，这里其实就是去redis里面获取，sessionRepository就是上面定义的RedisOperationsSessionRepository对象；如果redis里面也没有则创建一个新的session；")]),s._v(" "),n("h3",{attrs:{id:"_5-redisoperationssessionrepository类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-redisoperationssessionrepository类"}},[s._v("#")]),s._v(" 5.RedisOperationsSessionRepository类")]),s._v(" "),n("p",[s._v("关于session的保存，更新，删除，获取操作都在此类中；")]),s._v(" "),n("h4",{attrs:{id:"_5-1保存session"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-1保存session"}},[s._v("#")]),s._v(" 5.1保存session")]),s._v(" "),n("p",[s._v("每次在消息处理完之后，会执行finally中的commitSession方法，每个session被保存都会创建三组数据，如下所示：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('127.0.0.1:6379> keys *\n1) "spring:session:expirations:1530254160000"\n2) "spring:session:sessions:expires:d5e0f376-69d1-4fd4-9802-78eb5a3db144"\n3) "spring:session:sessions:d5e0f376-69d1-4fd4-9802-78eb5a3db144"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[n("strong",[s._v("hash结构记录")]),n("br"),s._v("\nkey格式：spring:session:sessions:[sessionId]，对应的value保存session的所有数据包括：creationTime，maxInactiveInterval，lastAccessedTime，attribute；"),n("br"),s._v(" "),n("strong",[s._v("set结构记录")]),n("br"),s._v("\nkey格式：spring:session:expirations:[过期时间]，对应的value为expires:[sessionId]列表，有效期默认是30分钟，即1800秒；"),n("br"),s._v(" "),n("strong",[s._v("string结构记录")]),n("br"),s._v("\nkey格式：spring:session:sessions:expires:[sessionId]，对应的value为空；该数据的TTL表示sessionId过期的剩余时间；")]),s._v(" "),n("p",[s._v("相关代码如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('public void onExpirationUpdated(Long originalExpirationTimeInMilli,\n            ExpiringSession session) {\n        String keyToExpire = "expires:" + session.getId();\n        long toExpire = roundUpToNextMinute(expiresInMillis(session));\n \n        if (originalExpirationTimeInMilli != null) {\n            long originalRoundedUp = roundUpToNextMinute(originalExpirationTimeInMilli);\n            if (toExpire != originalRoundedUp) {\n                String expireKey = getExpirationKey(originalRoundedUp);\n                this.redis.boundSetOps(expireKey).remove(keyToExpire);\n            }\n        }\n \n        long sessionExpireInSeconds = session.getMaxInactiveIntervalInSeconds();\n        String sessionKey = getSessionKey(keyToExpire);\n \n        if (sessionExpireInSeconds < 0) {\n            this.redis.boundValueOps(sessionKey).append("");\n            this.redis.boundValueOps(sessionKey).persist();\n            this.redis.boundHashOps(getSessionKey(session.getId())).persist();\n            return;\n        }\n \n        String expireKey = getExpirationKey(toExpire);\n        BoundSetOperations<Object, Object> expireOperations = this.redis\n                .boundSetOps(expireKey);\n        expireOperations.add(keyToExpire);\n \n        long fiveMinutesAfterExpires = sessionExpireInSeconds\n                + TimeUnit.MINUTES.toSeconds(5);\n \n        expireOperations.expire(fiveMinutesAfterExpires, TimeUnit.SECONDS);\n        if (sessionExpireInSeconds == 0) {\n            this.redis.delete(sessionKey);\n        }\n        else {\n            this.redis.boundValueOps(sessionKey).append("");\n            this.redis.boundValueOps(sessionKey).expire(sessionExpireInSeconds,\n                    TimeUnit.SECONDS);\n        }\n        this.redis.boundHashOps(getSessionKey(session.getId()))\n                .expire(fiveMinutesAfterExpires, TimeUnit.SECONDS);\n    }\n \n    static long expiresInMillis(ExpiringSession session) {\n        int maxInactiveInSeconds = session.getMaxInactiveIntervalInSeconds();\n        long lastAccessedTimeInMillis = session.getLastAccessedTime();\n        return lastAccessedTimeInMillis + TimeUnit.SECONDS.toMillis(maxInactiveInSeconds);\n    }\n \n    static long roundUpToNextMinute(long timeInMs) {\n        Calendar date = Calendar.getInstance();\n        date.setTimeInMillis(timeInMs);\n        date.add(Calendar.MINUTE, 1);\n        date.clear(Calendar.SECOND);\n        date.clear(Calendar.MILLISECOND);\n        return date.getTimeInMillis();\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br")])]),n("p",[s._v("getMaxInactiveIntervalInSeconds默认是1800秒，expiresInMillis返回了一个到期的时间戳；roundUpToNextMinute方法在此基础上添加了1分钟，并且清除了秒和毫秒，返回的long值被用来当做key，用来记录一分钟内应当过期的key列表，也就是上面的set结构记录；"),n("br"),s._v("\n后面的代码分别为以上三个key值指定了有效期，spring:session:sessions:expires是30分钟，而另外2个都是35分钟；"),n("br"),s._v("\n理论上只需要为spring:session:sessions:[sessionId]指定有效期就行了，为什么还要再保存两个key，官方的说法是依赖redis自身提供的有效期并不能保证及时删除；")]),s._v(" "),n("h4",{attrs:{id:"_5-2定期删除"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2定期删除"}},[s._v("#")]),s._v(" 5.2定期删除")]),s._v(" "),n("p",[s._v("除了依赖redis本身的有效期机制，spring-session提供了一个定时器，用来定期检查需要被清理的session；")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Scheduled(cron = "${spring.session.cleanup.cron.expression:0 * * * * *}")\npublic void cleanupExpiredSessions() {\n    this.expirationPolicy.cleanExpiredSessions();\n}\n \npublic void cleanExpiredSessions() {\n    long now = System.currentTimeMillis();\n    long prevMin = roundDownMinute(now);\n \n    if (logger.isDebugEnabled()) {\n        logger.debug("Cleaning up sessions expiring at " + new Date(prevMin));\n    }\n \n    String expirationKey = getExpirationKey(prevMin);\n    Set<Object> sessionsToExpire = this.redis.boundSetOps(expirationKey).members();\n    this.redis.delete(expirationKey);\n    for (Object session : sessionsToExpire) {\n        String sessionKey = getSessionKey((String) session);\n        touch(sessionKey);\n    }\n}\n \n/**\n * By trying to access the session we only trigger a deletion if it the TTL is\n * expired. This is done to handle\n * https://github.com/spring-projects/spring-session/issues/93\n *\n * @param key the key\n */\nprivate void touch(String key) {\n    this.redis.hasKey(key);\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br")])]),n("p",[s._v("同样是通过roundDownMinute方法来获取key，获取这一分钟内要被删除的session，此value是set数据结构，里面存放这需要被删除的sessionId；"),n("br"),s._v("\n（注：这里面存放的的是spring:session:sessions:expires:[sessionId]，并不是实际存储session数据的spring:session:sessions:[sessionId]）"),n("br"),s._v("\n首先删除了spring:session:expirations:[过期时间]，然后遍历set执行touch方法，并没有直接执行删除操作，看touch方法的注释大致意义就是尝试访问一下key，如果key已经过去则触发删除操作，利用了redis本身的特性；")]),s._v(" "),n("h4",{attrs:{id:"_5-3键空间通知-keyspace-notification"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-3键空间通知-keyspace-notification"}},[s._v("#")]),s._v(" 5.3键空间通知(keyspace notification)")]),s._v(" "),n("p",[s._v("定期删除机制并没有删除实际存储session数据的spring:session:sessions:[sessionId]，这里利用了redis的keyspace notification功能，大致就是通过命令产生一个通知，具体什么命令可以配置（包括：删除，过期等）具体可以查看："),n("a",{attrs:{href:"http://redisdoc.com/topic/notification.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://redisdoc.com/topic/not..."),n("OutboundLink")],1),s._v("；"),n("br"),s._v("\nspring-session的keyspace notification配置在ConfigureNotifyKeyspaceEventsAction类中，RedisOperationsSessionRepository负责接收消息通知，具体代码如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('public void onMessage(Message message, byte[] pattern) {\n        byte[] messageChannel = message.getChannel();\n        byte[] messageBody = message.getBody();\n        if (messageChannel == null || messageBody == null) {\n            return;\n        }\n \n        String channel = new String(messageChannel);\n \n        if (channel.startsWith(getSessionCreatedChannelPrefix())) {\n            // TODO: is this thread safe?\n            Map<Object, Object> loaded = (Map<Object, Object>) this.defaultSerializer\n                    .deserialize(message.getBody());\n            handleCreated(loaded, channel);\n            return;\n        }\n \n        String body = new String(messageBody);\n        if (!body.startsWith(getExpiredKeyPrefix())) {\n            return;\n        }\n \n        boolean isDeleted = channel.endsWith(":del");\n        if (isDeleted || channel.endsWith(":expired")) {\n            int beginIndex = body.lastIndexOf(":") + 1;\n            int endIndex = body.length();\n            String sessionId = body.substring(beginIndex, endIndex);\n \n            RedisSession session = getSession(sessionId, true);\n \n            if (logger.isDebugEnabled()) {\n                logger.debug("Publishing SessionDestroyedEvent for session " + sessionId);\n            }\n \n            cleanupPrincipalIndex(session);\n \n            if (isDeleted) {\n                handleDeleted(sessionId, session);\n            }\n            else {\n                handleExpired(sessionId, session);\n            }\n \n            return;\n        }\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br")])]),n("p",[s._v("接收已spring:session:sessions:expires开头的通知，然后截取出sessionId，然后通过sessionId删除实际存储session的数据；"),n("br"),s._v("\n此处有个疑问就是为什么要引入spring:session:sessions:expires:[sessionId]类型key，spring:session:expirations的value直接保存spring:session:sessions:[sessionId]不就可以了吗，这里使用此key的目的可能是让有效期和实际的数据分开，如果不这样有地方监听到session过期，而此时session已经被移除，导致获取不到session的内容；并且在上面设置有效期的时候，spring:session:sessions:[sessionId]的有效期多了5分钟，应该也是为了这个考虑的；")]),s._v(" "),n("h2",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" "),n("strong",[s._v("总结")])]),s._v(" "),n("p",[s._v("比起之前介绍的tomcat-redis-session-manager来管理session，spring-session引入了更多的键值，并且还引入了定时器，这无疑增加了复杂性和额外的开销，实际项目具体使用哪种方式还需要权衡一下。")])])}),[],!1,null,null,null);e.default=i.exports}}]);